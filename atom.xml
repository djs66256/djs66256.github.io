<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>苍耳的技术博客</title>
  <icon>https://www.gravatar.com/avatar/2f748ebf01f37cc394aa692ef4bca1c2</icon>
  <subtitle>无悔的人生</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://djs66256.github.io/"/>
  <updated>2025-06-10T07:57:13.233Z</updated>
  <id>http://djs66256.github.io/</id>
  
  <author>
    <name>苍耳</name>
    <email>djs66256@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>提升 App 的音频录制功能</title>
    <link href="http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_251/"/>
    <id>http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_251/</id>
    <published>2025-06-10T07:57:13.000Z</published>
    <updated>2025-06-10T07:57:13.233Z</updated>
    
    <content type="html"><![CDATA[<p>了解如何提升 app 的音频录制功能。探索如何通过 ios 和 ipados 26 上的输入选择器交互来灵活地选择音频设备。了解有哪些 api 可帮助你通过 airpods 进行高质量录音。我们还将介绍空间音频录制和编辑功能，这些功能可让你隔离语音和环境背景音，所有这些功能均可使用 audiotoolbox、avfoundation 和 cinematic 框架实现。<br><span id="more"></span></p><p><img src="https://devimages-cdn.apple.com/wwdc-services/images/3055294D-836B-4513-B7B0-0BC5666246B0/10050/10050_wide_250x141_2x.jpg" alt="视频封面"><br><a href="https://developer.apple.com/cn/videos/play/wwdc2025/251/">视频地址</a></p><h1 id="iOS-26-音频录制新功能全解析：从设备选择到空间音频"><a href="#iOS-26-音频录制新功能全解析：从设备选择到空间音频" class="headerlink" title="iOS 26 音频录制新功能全解析：从设备选择到空间音频"></a>iOS 26 音频录制新功能全解析：从设备选择到空间音频</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在 iOS 和 iPadOS 26 中，Apple 为开发者带来了一系列强大的音频录制新功能。无论您是想在应用中实现专业的设备切换功能，还是希望集成 AirPods 的高质量录音，甚至是探索空间音频的创作可能，这些新 API 都能满足您的需求。本文将详细介绍这些功能及其实现方式。</p><h2 id="输入设备选择器：应用内无缝切换"><a href="#输入设备选择器：应用内无缝切换" class="headerlink" title="输入设备选择器：应用内无缝切换"></a>输入设备选择器：应用内无缝切换</h2><h3 id="新特性概述"><a href="#新特性概述" class="headerlink" title="新特性概述"></a>新特性概述</h3><p>iOS 26 引入了全新的输入设备选择 API，允许用户直接在应用内切换音频输入源，无需跳转到系统设置。这对于内容创作类应用特别有价值。</p><h3 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> AVKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AppViewController</span> &#123;</span><br><span class="line">    <span class="comment">// 配置音频会话</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// AVInputPickerInteraction 是展示输入选择器的 NSObject 子类</span></span><br><span class="line">    <span class="keyword">let</span> inputPickerInteraction <span class="operator">=</span> <span class="type">AVInputPickerInteraction</span>()   </span><br><span class="line">    inputPickerInteraction.delegate <span class="operator">=</span> <span class="keyword">self</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将选择器关联到 UI 元素（如按钮）</span></span><br><span class="line">    <span class="keyword">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> selectMicButton: <span class="type">UIButton</span>!</span><br><span class="line">    <span class="keyword">self</span>.selectMicButton.addInteraction(<span class="keyword">self</span>.inputPickerInteraction)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 按钮回调：展示输入选择器</span></span><br><span class="line">    <span class="keyword">@IBAction</span> <span class="keyword">func</span> <span class="title function_">handleSelectMicButton</span>(<span class="keyword">_</span> <span class="params">sender</span>: <span class="type">UIButton</span>) &#123;</span><br><span class="line">    inputPickerInteraction.present()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AirPods-高质量录音模式"><a href="#AirPods-高质量录音模式" class="headerlink" title="AirPods 高质量录音模式"></a>AirPods 高质量录音模式</h2><h3 id="开启方式"><a href="#开启方式" class="headerlink" title="开启方式"></a>开启方式</h3><p>iOS 26 为 AirPods 提供了专为内容创作优化的高质量录音模式，其效果可媲美专业领夹麦克风。</p><h3 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// AVAudioSession 启用方式 - 会话分类选项</span></span><br><span class="line"><span class="type">AVAudioSessionCategoryOptions</span>.bluetoothHighQualityRecording</span><br><span class="line"></span><br><span class="line"><span class="comment">// AVCaptureSession 启用方式 - 捕获会话属性</span></span><br><span class="line">session.configuresApplicationAudioSessionForBluetoothHighQualityRecording <span class="operator">=</span> <span class="literal">true</span>  </span><br></pre></td></tr></table></figure><h2 id="空间音频录制与编辑"><a href="#空间音频录制与编辑" class="headerlink" title="空间音频录制与编辑"></a>空间音频录制与编辑</h2><h3 id="技术原理"><a href="#技术原理" class="headerlink" title="技术原理"></a>技术原理</h3><p>空间音频采用第一阶 Ambisonics (FOA) 格式，包含：</p><ul><li>1 个全向分量</li><li>3 个正交分量 (X/Y/Z 轴方向)</li></ul><h3 id="音频混音功能"><a href="#音频混音功能" class="headerlink" title="音频混音功能"></a>音频混音功能</h3><p>iOS 26 新增了音频混音 API，可以调节人声与环境音的平衡：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Cinematic</span><br><span class="line"></span><br><span class="line"><span class="comment">// 混音参数（建议通过 UI 元素调节）</span></span><br><span class="line"><span class="keyword">var</span> intensity: <span class="type">Float32</span> <span class="operator">=</span> <span class="number">0.5</span> <span class="comment">// 0.0 到 1.0 之间</span></span><br><span class="line"><span class="keyword">var</span> style <span class="operator">=</span> <span class="type">CNSpatialAudioRenderingStyle</span>.cinematic</span><br><span class="line"></span><br><span class="line"><span class="comment">// 异步初始化 CNAssetAudioInfo</span></span><br><span class="line"><span class="keyword">let</span> audioInfo <span class="operator">=</span> <span class="keyword">try</span> <span class="keyword">await</span> <span class="type">CNAssetSpatialAudioInfo</span>(asset: myAVAsset)</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 生成带效果的 AVAudioMix</span></span><br><span class="line"><span class="keyword">let</span> newAudioMix: <span class="type">AVAudioMix</span> <span class="operator">=</span> audioInfo.audioMix(effectIntensity: intensity,</span><br><span class="line">                                                 renderingStyle: style)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 应用于 AVPlayerItem</span></span><br><span class="line">myAVPlayerItem.audioMix <span class="operator">=</span> newAudioMix</span><br></pre></td></tr></table></figure><h2 id="升级路线图"><a href="#升级路线图" class="headerlink" title="升级路线图"></a>升级路线图</h2><p>建议开发者按照以下步骤升级应用：</p><ol><li>添加 AVInputPickerInteraction 实现原生设备切换</li><li>启用 AirPods 高质量录音选项</li><li>结合 MovieFileOutput 和 AudioDataOutput 实现灵活处理</li><li>用 AVAssetWriter 集成空间音频采集</li><li>在回放时应用音频混音 API</li></ol><h2 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h2><ul><li><a href="https://developer.apple.com/videos/play/wwdc2025/253">利用拍摄控件提升你的相机体验</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2025/319">在你的 App 中录制电影效果视频</a></li></ul><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><ul><li><a href="https://developer.apple.com/documentation/AVFoundation">AVFoundation</a></li><li><a href="https://developer.apple.com/documentation/Cinematic">Cinematic</a></li><li><a href="https://developer.apple.com/documentation/Technotes/tn3177-understanding-alternate-audio-track-groups-in-movie-files">TN3177: Understanding alternate audio track groups in movie files</a><blockquote><p>此文章由AI生成，可能存在错误，如有问题，请联系<a href="djs66256@163.com">djs66256@163.com</a></p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;了解如何提升 app 的音频录制功能。探索如何通过 ios 和 ipados 26 上的输入选择器交互来灵活地选择音频设备。了解有哪些 api 可帮助你通过 airpods 进行高质量录音。我们还将介绍空间音频录制和编辑功能，这些功能可让你隔离语音和环境背景音，所有这些功能均可使用 audiotoolbox、avfoundation 和 cinematic 框架实现。&lt;br&gt;
    
    </summary>
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/categories/wwdc2025/"/>
    
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/tags/wwdc2025/"/>
    
      <category term="ios" scheme="http://djs66256.github.io/tags/ios/"/>
    
      <category term="ipados" scheme="http://djs66256.github.io/tags/ipados/"/>
    
      <category term="macos" scheme="http://djs66256.github.io/tags/macos/"/>
    
      <category term="音频和视频" scheme="http://djs66256.github.io/tags/%E9%9F%B3%E9%A2%91%E5%92%8C%E8%A7%86%E9%A2%91/"/>
    
  </entry>
  
  <entry>
    <title>了解 Apple 沉浸视频技术</title>
    <link href="http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_403/"/>
    <id>http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_403/</id>
    <published>2025-06-10T07:55:16.000Z</published>
    <updated>2025-06-10T07:55:16.846Z</updated>
    
    <content type="html"><![CDATA[<p>探索 apple 沉浸视频和 apple 空间音频格式技术的功能，以打造真正的沉浸式体验。了解新的 immersivemediasupport 框架，该框架可读取和写入必要的元数据来实现 apple 沉浸视频。了解在单独的文件中编码和发布 apple 沉浸视频内容以通过 hls 进行播放或流媒体播放时应遵循的准则。</p><p>为了充分从这个讲座中获益，建议你先观看“探索 visionos 的视频体验”。<br><span id="more"></span></p><p><img src="https://devimages-cdn.apple.com/wwdc-services/images/3055294D-836B-4513-B7B0-0BC5666246B0/10238/10238_wide_250x141_2x.jpg" alt="视频封面"><br><a href="https://developer.apple.com/cn/videos/play/wwdc2025/403/">视频地址</a></p><h1 id="全面解析-Apple-沉浸式视频与空间音频技术"><a href="#全面解析-Apple-沉浸式视频与空间音频技术" class="headerlink" title="全面解析 Apple 沉浸式视频与空间音频技术"></a>全面解析 Apple 沉浸式视频与空间音频技术</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>随着 Apple Vision Pro 的推出，Apple 为开发者带来了全新的沉浸式视频与音频体验。本文将深入探讨 Apple 沉浸式视频（Apple Immersive Video）和 Apple 空间音频格式（ASAF）的技术细节，帮助开发者了解如何创建、处理并发布高质量的沉浸式内容。</p><h2 id="Apple-沉浸式视频核心技术"><a href="#Apple-沉浸式视频核心技术" class="headerlink" title="Apple 沉浸式视频核心技术"></a>Apple 沉浸式视频核心技术</h2><h3 id="基本概念与特性"><a href="#基本概念与特性" class="headerlink" title="基本概念与特性"></a>基本概念与特性</h3><p>Apple 沉浸式视频是 Apple Vision Pro 上最高品质的视频播放体验，具有以下特点：</p><ul><li>使用高保真视频和全沉浸式音频</li><li>需要专用摄像机拍摄（如 Blackmagic URSA Cine Immersive）</li><li>支持参数化投影类型</li><li>采用 4320×4320 单眼分辨率</li><li>最高支持 90 帧/秒</li><li>使用 P3-D65-PQ 色域</li></ul><h3 id="元数据处理"><a href="#元数据处理" class="headerlink" title="元数据处理"></a>元数据处理</h3><p>沉浸式视频的核心是它的元数据系统，主要包括两个关键组件：</p><ol><li><p><strong>VenueDescriptor</strong></p><ul><li>包含场景中所有摄像机的组合信息</li><li>存储为 AIMEData（Apple Immersive Media Embedded Data）</li><li>支持添加/删除摄像机</li><li>可以保存到 URL</li></ul></li><li><p><strong>PresentationCommand</strong></p><ul><li>表示动态元数据指令</li><li>支持”shot flop”（镜像翻转）等特效</li><li>可以处理动态渲染的淡入淡出效果</li></ul></li></ol><h2 id="开发工具与API"><a href="#开发工具与API" class="headerlink" title="开发工具与API"></a>开发工具与API</h2><h3 id="Immersive-Media-Support-框架"><a href="#Immersive-Media-Support-框架" class="headerlink" title="Immersive Media Support 框架"></a>Immersive Media Support 框架</h3><p>macOS 和 visionOS 26 引入了全新的 Immersive Media Support 框架，提供了以下能力：</p><ul><li>读写 Apple 沉浸式视频的核心元数据</li><li>支持内容预览功能</li><li>为视频制作管线提供支持</li></ul><h3 id="AVFoundation-扩展"><a href="#AVFoundation-扩展" class="headerlink" title="AVFoundation 扩展"></a>AVFoundation 扩展</h3><p>AVFoundation 新增了 API 用于处理沉浸式视频：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从 AIVU 文件读取 VenueDescriptor</span></span><br><span class="line"><span class="keyword">func</span> <span class="title function_">readAIMEData</span>(<span class="params">from</span> <span class="params">aivuFile</span>: <span class="type">URL</span>) <span class="keyword">async</span> <span class="keyword">throws</span> -&gt; <span class="type">VenueDescriptor</span>? &#123;</span><br><span class="line">    <span class="keyword">let</span> avAsset <span class="operator">=</span> <span class="type">AVURLAsset</span>(url: aivuFile)</span><br><span class="line">    <span class="keyword">let</span> metadata <span class="operator">=</span> <span class="keyword">try</span> <span class="keyword">await</span> avAsset.load(.metadata)</span><br><span class="line">    <span class="keyword">let</span> aimeData <span class="operator">=</span> metadata.filter(&#123; <span class="variable">$0</span>.identifier <span class="operator">==</span> .quickTimeMetadataAIMEData &#125;).first</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> dataValue <span class="operator">=</span> <span class="keyword">try</span> <span class="keyword">await</span> aimeData.load(.value) <span class="keyword">as?</span> <span class="type">NSData</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">try</span> <span class="keyword">await</span> <span class="type">VenueDescriptor</span>(aimeData: dataValue <span class="keyword">as</span> <span class="type">Data</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文件格式与工作流"><a href="#文件格式与工作流" class="headerlink" title="文件格式与工作流"></a>文件格式与工作流</h2><h3 id="AIVU-文件格式"><a href="#AIVU-文件格式" class="headerlink" title="AIVU 文件格式"></a>AIVU 文件格式</h3><p>Apple Immersive Video Universal (AIVU) 是包含完整元数据的容器文件，包含：</p><ul><li>输出视频</li><li>PresentationDescriptor</li><li>VenueDescriptor 元数据</li></ul><h3 id="文件验证"><a href="#文件验证" class="headerlink" title="文件验证"></a>文件验证</h3><p>可以使用 AIVUValidator 验证文件有效性：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">validAIVU</span>(<span class="params">file</span> <span class="params">aivuFile</span>: <span class="type">URL</span>) <span class="keyword">async</span> <span class="keyword">throws</span> -&gt; <span class="type">Bool</span> &#123; </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">try</span> <span class="keyword">await</span> <span class="type">AIVUValidator</span>.validate(url: aivuFile)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="内容发布规范"><a href="#内容发布规范" class="headerlink" title="内容发布规范"></a>内容发布规范</h2><h3 id="HLS-流媒体要求"><a href="#HLS-流媒体要求" class="headerlink" title="HLS 流媒体要求"></a>HLS 流媒体要求</h3><p>发布 Apple 沉浸式视频内容时需注意：</p><ul><li>推荐分段码率范围：平均 25-100 Mbps，峰值 50-150 Mbps</li><li>HLS 播放列表需包含版本12以上</li><li>需指向 AIME 文件的场馆描述数据ID</li><li>声明完全沉浸式内容类型</li><li>视频布局必须为立体视频</li></ul><h3 id="空间音频技术"><a href="#空间音频技术" class="headerlink" title="空间音频技术"></a>空间音频技术</h3><p>Apple 空间音频格式 (ASAF) 特性：</p><ul><li>使用 Apple 位置音频编解码器 (APAC)</li><li>支持多点声源</li><li>支持高阶 Ambisonics</li><li>完全适配对象与听者的位置方向变化</li><li>通过广播 Wave 文件承载</li></ul><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>Apple 的沉浸式视频和空间音频技术为开发者提供了创建真正沉浸式体验的强大工具。通过掌握这些核心技术，开发者可以为 Apple Vision Pro 打造引人入胜的沉浸式内容。建议进一步探索相关文档和示例代码，以充分利用这些创新技术。</p><h2 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h2><ul><li><a href="https://developer.apple.com/videos/play/wwdc2025/297">了解 Apple Projected Media Profile</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2025/304">探索 visionOS 的视频体验</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2025/296">支持 visionOS App 播放沉浸视频</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2025/237">空间网页的新功能</a></li></ul><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><ul><li><a href="https://developer.apple.com/documentation/AVFoundation">AVFoundation</a></li><li><a href="https://developer.apple.com/documentation/AVFoundation/AVPlayerItemMetadataOutput">AVPlayerItemMetadataOutput</a></li><li><a href="https://developer.apple.com/documentation/CoreMedia">Core Media</a></li><li><a href="https://developer.apple.com/documentation/HTTP-Live-Streaming/hls-authoring-specification-for-apple-devices">HTTP Live Streaming (HLS) authoring specification for Apple devices</a></li><li><a href="https://developer.apple.com/documentation/ImmersiveMediaSupport">Immersive Media Support</a></li><li><a href="https://developer.apple.com/streaming/Whats-new-HLS.pdf">What’s new in HTTP Live Streaming</a><blockquote><p>此文章由AI生成，可能存在错误，如有问题，请联系<a href="djs66256@163.com">djs66256@163.com</a></p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;探索 apple 沉浸视频和 apple 空间音频格式技术的功能，以打造真正的沉浸式体验。了解新的 immersivemediasupport 框架，该框架可读取和写入必要的元数据来实现 apple 沉浸视频。了解在单独的文件中编码和发布 apple 沉浸视频内容以通过 hls 进行播放或流媒体播放时应遵循的准则。&lt;/p&gt;
&lt;p&gt;为了充分从这个讲座中获益，建议你先观看“探索 visionos 的视频体验”。&lt;br&gt;
    
    </summary>
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/categories/wwdc2025/"/>
    
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/tags/wwdc2025/"/>
    
      <category term="visionos" scheme="http://djs66256.github.io/tags/visionos/"/>
    
      <category term="音频和视频" scheme="http://djs66256.github.io/tags/%E9%9F%B3%E9%A2%91%E5%92%8C%E8%A7%86%E9%A2%91/"/>
    
  </entry>
  
  <entry>
    <title>探索 visionOS 的视频体验</title>
    <link href="http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_304/"/>
    <id>http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_304/</id>
    <published>2025-06-10T07:55:11.000Z</published>
    <updated>2025-06-10T07:55:11.419Z</updated>
    
    <content type="html"><![CDATA[<p>了解在你的 app 中创建和呈现沉浸视频体验的不同方式。我们将探索 visionos 26 中提供的多种媒体类型 (包括 180°、360°和宽视野视频的配置文件)、用来创建和播放 apple 沉浸视频的选项，以及适用于 2d、3d 和空间视频的扩展功能。探索哪些配置文件最适合你的 app 和内容。<br><span id="more"></span></p><p><img src="https://devimages-cdn.apple.com/wwdc-services/images/3055294D-836B-4513-B7B0-0BC5666246B0/10042/10042_wide_250x141_2x.jpg" alt="视频封面"><br><a href="https://developer.apple.com/cn/videos/play/wwdc2025/304/">视频地址</a></p><h1 id="VisionOS-视频体验全解析：从-2D-到沉浸式"><a href="#VisionOS-视频体验全解析：从-2D-到沉浸式" class="headerlink" title="VisionOS 视频体验全解析：从 2D 到沉浸式"></a>VisionOS 视频体验全解析：从 2D 到沉浸式</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>VisionOS 26 为开发者带来了丰富的视频呈现方式，从传统的 2D/3D 视频到全新的 180°、360°、宽视野和 Apple 沉浸视频。本文将详细介绍这些媒体类型的特点、适用场景以及实现方式，帮助你为应用选择最合适的视频配置方案。</p><h2 id="基础视频类型"><a href="#基础视频类型" class="headerlink" title="基础视频类型"></a>基础视频类型</h2><h3 id="2D-与-3D-视频"><a href="#2D-与-3D-视频" class="headerlink" title="2D 与 3D 视频"></a>2D 与 3D 视频</h3><p>Vision Pro 支持在应用 UI 中内联播放 2D 视频，也可以展示 3D 立体内容：</p><ul><li>2D 视频可以自由嵌入 UI 界面</li><li>3D 视频在扩展播放模式下才能展现立体效果</li><li>支持在虚拟环境中停靠播放</li><li>visionOS 26 新增动态帧调整功能</li></ul><h3 id="空间视频"><a href="#空间视频" class="headerlink" title="空间视频"></a>空间视频</h3><p>空间视频是 visionOS 的特色功能：</p><ul><li>可通过 iPhone 15 Pro/16 或佳能相机拍摄</li><li>提供窗口模式和沉浸模式两种播放方式</li><li>visionOS 26 全媒体框架支持空间视频播放</li><li>专业工作流支持 Final Cut Pro 等编辑工具</li></ul><h2 id="沉浸式视频体验"><a href="#沉浸式视频体验" class="headerlink" title="沉浸式视频体验"></a>沉浸式视频体验</h2><h3 id="180°、360°与宽视野视频"><a href="#180°、360°与宽视野视频" class="headerlink" title="180°、360°与宽视野视频"></a>180°、360°与宽视野视频</h3><p>visionOS 26 原生支持三种非直线投影媒体：</p><ol><li><strong>180°视频</strong>：投影到前方半球</li><li><strong>360°视频</strong>：通过等距柱状投影完全包裹观众</li><li><strong>宽视野视频</strong>：专为运动相机优化，消除畸变</li></ol><p>这些格式采用先进的 MV-HEVC 编码技术，基于 Apple Projected Media Profile 规范。</p><h3 id="Apple-沉浸视频"><a href="#Apple-沉浸视频" class="headerlink" title="Apple 沉浸视频"></a>Apple 沉浸视频</h3><p>专业级沉浸视频体验：</p><ul><li>使用 Blackmagic URSA Cine 设备拍摄</li><li>单眼分辨率高达 8160×7200</li><li>210°超广视野</li><li>完整的工作流支持</li><li>开发者可定制工具链</li></ul><h2 id="配置方案选择指南"><a href="#配置方案选择指南" class="headerlink" title="配置方案选择指南"></a>配置方案选择指南</h2><h3 id="关键决策因素"><a href="#关键决策因素" class="headerlink" title="关键决策因素"></a>关键决策因素</h3><table><thead><tr><th>格式类型</th><th>适用场景</th><th>特点</th></tr></thead><tbody><tr><td>2D/3D 视频</td><td>平面内容</td><td>传统播放方式</td></tr><tr><td>空间视频</td><td>个人记忆</td><td>真实尺寸沉浸</td></tr><tr><td>180°/360°</td><td>虚拟旅游</td><td>半球/球面投影</td></tr><tr><td>宽视野</td><td>运动拍摄</td><td>消除畸变</td></tr><tr><td>沉浸视频</td><td>专业制作</td><td>超高分辨率</td></tr></tbody></table><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>visionOS 26 提供了从基础到专业的完整视频体验解决方案。开发者可以根据应用场景和设备条件，选择合适的视频格式。建议下载官方示例项目，体验不同格式的实际效果。</p><h2 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h2><ul><li><a href="https://developer.apple.com/videos/play/wwdc2025/403">了解 Apple 沉浸视频技术</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2025/297">了解 Apple Projected Media Profile</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2025/296">支持 visionOS App 播放沉浸视频</a></li></ul><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><ul><li><a href="https://developer.apple.com/av-foundation/Apple-Movie-Profiles.pdf">Apple Movie Profiles for Spatial and Immersive Media</a></li><li><a href="https://developer.apple.com/documentation/ImageIO/Creating-spatial-photos-and-videos-with-spatial-metadata">Creating spatial photos and videos with spatial metadata</a><blockquote><p>此文章由AI生成，可能存在错误，如有问题，请联系<a href="djs66256@163.com">djs66256@163.com</a></p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;了解在你的 app 中创建和呈现沉浸视频体验的不同方式。我们将探索 visionos 26 中提供的多种媒体类型 (包括 180°、360°和宽视野视频的配置文件)、用来创建和播放 apple 沉浸视频的选项，以及适用于 2d、3d 和空间视频的扩展功能。探索哪些配置文件最适合你的 app 和内容。&lt;br&gt;
    
    </summary>
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/categories/wwdc2025/"/>
    
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/tags/wwdc2025/"/>
    
      <category term="visionos" scheme="http://djs66256.github.io/tags/visionos/"/>
    
      <category term="音频和视频" scheme="http://djs66256.github.io/tags/%E9%9F%B3%E9%A2%91%E5%92%8C%E8%A7%86%E9%A2%91/"/>
    
  </entry>
  
  <entry>
    <title>支持 visionOS App 播放沉浸视频</title>
    <link href="http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_296/"/>
    <id>http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_296/</id>
    <published>2025-06-10T07:55:09.000Z</published>
    <updated>2025-06-10T07:55:09.230Z</updated>
    
    <content type="html"><![CDATA[<p>了解如何在 visionos app 中播放沉浸视频。我们将介绍各种沉浸感十足的渲染模式、查看支持这些模式的框架，并讲解如何在你的 app 中渲染沉浸视频。为了充分利用好本次视频，我们建议你先观看 wwdc25 讲座“探索 visionos 的视频体验”。<br><span id="more"></span></p><p><img src="https://devimages-cdn.apple.com/wwdc-services/images/3055294D-836B-4513-B7B0-0BC5666246B0/10057/10057_wide_250x141_2x.jpg" alt="视频封面"><br><a href="https://developer.apple.com/cn/videos/play/wwdc2025/296/">视频地址</a></p><h1 id="在-visionOS-应用中实现沉浸式视频播放的完整指南"><a href="#在-visionOS-应用中实现沉浸式视频播放的完整指南" class="headerlink" title="在 visionOS 应用中实现沉浸式视频播放的完整指南"></a>在 visionOS 应用中实现沉浸式视频播放的完整指南</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>随着 visionOS 26 的推出，开发者现在可以在应用中实现更丰富的沉浸式视频播放体验。本文将详细介绍如何在 visionOS 应用中支持各种沉浸式视频格式，包括 2D、3D、180 度、360 度以及广视角视频。</p><h2 id="visionOS-26-支持的视频格式"><a href="#visionOS-26-支持的视频格式" class="headerlink" title="visionOS 26 支持的视频格式"></a>visionOS 26 支持的视频格式</h2><p>visionOS 26 引入了多种新的视频配置文件：</p><ul><li><strong>2D 和 3D 视频</strong>：传统的平面和立体视频</li><li><strong>空间视频</strong>：提供立体感的沉浸内容</li><li><strong>Apple 投影媒体配置文件 (APMP)</strong>：包括 180 度、360 度和广视角视频</li><li><strong>Apple 沉浸式视频</strong>：最顶级的沉浸体验</li></ul><p>开发者可以根据应用需求选择合适的视频格式，每种格式都能带来不同的视觉体验。</p><h2 id="开发框架选择"><a href="#开发框架选择" class="headerlink" title="开发框架选择"></a>开发框架选择</h2><p>visionOS 提供了多个框架来支持不同级别的视频播放需求：</p><ol><li><strong>Quick Look</strong>：最简单快捷的实现方式，适合快速集成</li><li><strong>AVKit</strong>：提供跨平台一致性的播放体验</li><li><strong>RealityKit</strong>：适合需要高度自定义的游戏或特殊应用场景</li><li><strong>网页内容</strong>：适用于网页应用</li></ol><h2 id="Quick-Look-实现方案"><a href="#Quick-Look-实现方案" class="headerlink" title="Quick Look 实现方案"></a>Quick Look 实现方案</h2><p>Quick Look 提供了两种主要 API：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 跨进程媒体呈现</span></span><br><span class="line"><span class="type">PreviewApplication</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 应用内媒体呈现</span></span><br><span class="line"><span class="type">QLPreviewController</span></span><br></pre></td></tr></table></figure><p>在 visionOS 26 中，这两个 API 都得到了增强，能够自动处理新视频格式的呈现和转场效果，开发者几乎无需额外工作就能获得沉浸式体验。</p><h2 id="AVKit-高级配置"><a href="#AVKit-高级配置" class="headerlink" title="AVKit 高级配置"></a>AVKit 高级配置</h2><p>AVKit 在 visionOS 26 中引入了全新的 <code>AVExperienceController</code>，提供了更精细的控制：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Expanded 配置示例</span></span><br><span class="line">experienceController.configuration.expanded.automaticTransitionToImmersive <span class="operator">=</span> .none</span><br><span class="line"></span><br><span class="line"><span class="comment">// Immersive 体验配置</span></span><br><span class="line">experienceController.configuration.placement <span class="operator">=</span> .over(scene: myScene)</span><br></pre></td></tr></table></figure><p>开发者可以通过 <code>AVExperienceController.Delegate</code> 协议监控三种状态变化：</p><ol><li>可用体验变化</li><li>转场准备状态</li><li>转场完成状态</li></ol><h2 id="RealityKit-自定义实现"><a href="#RealityKit-自定义实现" class="headerlink" title="RealityKit 自定义实现"></a>RealityKit 自定义实现</h2><p>对于需要高度定制的应用，RealityKit 是最佳选择：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置渐进沉浸模式</span></span><br><span class="line">videoPlayerComponent.desiredImmersiveViewingMode <span class="operator">=</span> .progressive</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置空间视频模式</span></span><br><span class="line">videoPlayerComponent.desiredSpatialVideoMode <span class="operator">=</span> .spatial</span><br></pre></td></tr></table></figure><p>RealityKit 还支持舒适性缓解检测，当系统检测到可能导致用户不适的剧烈运动时，会自动调整沉浸级别。</p><h2 id="SwiftUI-集成最佳实践"><a href="#SwiftUI-集成最佳实践" class="headerlink" title="SwiftUI 集成最佳实践"></a>SwiftUI 集成最佳实践</h2><p>与 SwiftUI 集成时，建议：</p><ul><li>使用 <code>GeometryReader3D</code> 调整视频尺寸</li><li>添加 <code>ModelSortGroupComponent</code> 解决 UI 排序问题</li><li>确保 <code>ImmersionStyle</code> 与 <code>desiredImmersiveViewingMode</code> 匹配</li></ul><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>visionOS 26 为开发者提供了强大的工具来创建沉浸式视频体验。无论是简单的 Quick Look 集成，还是高度定制的 RealityKit 实现，都能满足不同应用场景的需求。建议开发者根据应用的具体需求选择合适的实现方案。</p><h2 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h2><ul><li><a href="https://developer.apple.com/videos/play/wwdc2025/403">了解 Apple 沉浸视频技术</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2025/297">了解 Apple Projected Media Profile</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2025/304">探索 visionOS 的视频体验</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2025/237">空间网页的新功能</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2024/10153">深入探究空间容器和沉浸式空间</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2023/10081">使用 RealityKit 增强你的空间计算 App</a></li></ul><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><ul><li><a href="https://developer.apple.com/documentation/AVFoundation">AVFoundation 文档</a></li><li><a href="https://developer.apple.com/documentation/AVKit">AVKit 文档</a></li><li><a href="https://developer.apple.com/streaming/examples/">HTTP Live Streaming 示例</a></li><li><a href="https://developer.apple.com/documentation/RealityKit">RealityKit 文档</a><blockquote><p>此文章由AI生成，可能存在错误，如有问题，请联系<a href="djs66256@163.com">djs66256@163.com</a></p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;了解如何在 visionos app 中播放沉浸视频。我们将介绍各种沉浸感十足的渲染模式、查看支持这些模式的框架，并讲解如何在你的 app 中渲染沉浸视频。为了充分利用好本次视频，我们建议你先观看 wwdc25 讲座“探索 visionos 的视频体验”。&lt;br&gt;
    
    </summary>
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/categories/wwdc2025/"/>
    
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/tags/wwdc2025/"/>
    
      <category term="visionos" scheme="http://djs66256.github.io/tags/visionos/"/>
    
      <category term="音频和视频" scheme="http://djs66256.github.io/tags/%E9%9F%B3%E9%A2%91%E5%92%8C%E8%A7%86%E9%A2%91/"/>
    
  </entry>
  
  <entry>
    <title>与附近用户共享 visionOS 体验</title>
    <link href="http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_318/"/>
    <id>http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_318/</id>
    <published>2025-06-10T07:54:14.000Z</published>
    <updated>2025-06-10T07:54:14.513Z</updated>
    
    <content type="html"><![CDATA[<p>了解如何为同一房间内佩戴 apple vision pro 的用户打造共享体验。我们将展示如何在你的 app 中整合同播共享并充分利用 arkit，介绍与附近 facetime 通话参与者共享窗口的流程有哪些更新，并介绍旨在实现流畅协作的全新 api。探索相关最佳实践，了解如何为身处同一空间的用户打造别具特色、易于发现且引人入胜的协作功能。<br><span id="more"></span></p><p><img src="https://devimages-cdn.apple.com/wwdc-services/images/3055294D-836B-4513-B7B0-0BC5666246B0/10055/10055_wide_250x141_2x.jpg" alt="视频封面"><br><a href="https://developer.apple.com/cn/videos/play/wwdc2025/318/">视频地址</a></p><h1 id="在-visionOS-中实现同空间共享体验的完整指南"><a href="#在-visionOS-中实现同空间共享体验的完整指南" class="headerlink" title="在 visionOS 中实现同空间共享体验的完整指南"></a>在 visionOS 中实现同空间共享体验的完整指南</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>苹果 visionOS 26 引入了一项令人振奋的新功能——同空间共享体验。这项技术允许在同一物理空间内的多个 Vision Pro 用户共享应用内容，共同观看、聆听或协作使用应用。无论是家庭娱乐还是团队协作，这都将带来前所未有的沉浸式互动体验。</p><h2 id="基础概念：附近共享机制"><a href="#基础概念：附近共享机制" class="headerlink" title="基础概念：附近共享机制"></a>基础概念：附近共享机制</h2><p>visionOS 26 重新设计了应用共享流程，使其更加直观：</p><ul><li>每个窗口右侧新增分享按钮</li><li>点击后会显示附近用户列表</li><li>共享窗口会精确出现在所有参与者的视野中同一位置</li><li>窗口栏变为绿色表示正在共享状态</li></ul><p>系统确保所有参与者看到的窗口位置和尺寸完全同步，移动或调整窗口时会实时更新。</p><h2 id="SharePlay-框架整合"><a href="#SharePlay-框架整合" class="headerlink" title="SharePlay 框架整合"></a>SharePlay 框架整合</h2><p>要实现交互式共享体验（而不仅仅是查看），需要使用 SharePlay 框架：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建群组活动示例</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">BoardGameActivity</span>: <span class="title class_ inherited__">GroupActivity</span>, <span class="title class_ inherited__">Transferable</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> metadata <span class="operator">=</span> <span class="type">GroupActivityMetadata</span>(title: <span class="string">&quot;一起玩&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>沉浸式空间应用开发者需要注意：</p><ul><li>保持非沉浸模式作为共享入口</li><li>待所有人加入后再切换至沉浸模式</li><li>可以使用自定义按钮触发 activate() 方法呼出共享菜单</li></ul><h2 id="高级功能实现"><a href="#高级功能实现" class="headerlink" title="高级功能实现"></a>高级功能实现</h2><h3 id="识别附近参与者"><a href="#识别附近参与者" class="headerlink" title="识别附近参与者"></a>识别附近参与者</h3><p>通过 GroupSession 的 activeParticipants 属性，结合 isNearbyWithLocalParticipant 标志：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">observeParticipants</span>(<span class="params">session</span>: <span class="type">GroupSession</span>&lt;<span class="type">BoardGameActivity</span>&gt;) <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> <span class="keyword">await</span> activeParticipants <span class="keyword">in</span> session.<span class="variable">$activeParticipants</span>.values &#123;</span><br><span class="line">        <span class="keyword">let</span> nearbyPlayers <span class="operator">=</span> activeParticipants.filter &#123; <span class="variable">$0</span>.isNearbyWithLocalParticipant &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="基于位置的内容布局"><a href="#基于位置的内容布局" class="headerlink" title="基于位置的内容布局"></a>基于位置的内容布局</h3><p>使用 ParticipantState.pose 属性获取参与者在沉浸式空间中的位置信息，实现更智能的内容放置。</p><h3 id="媒体同步播放"><a href="#媒体同步播放" class="headerlink" title="媒体同步播放"></a>媒体同步播放</h3><p>visionOS 26 中 AVPlayer 新增了对同空间用户的精准同步支持：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">WindowGroup</span>(id: <span class="string">&quot;教学视频&quot;</span>) &#123;</span><br><span class="line">    <span class="type">InstructionalVideoView</span>()</span><br><span class="line">        .groupActivityAssociation(.primary(<span class="string">&quot;教学视频&quot;</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ARKit-共享锚点"><a href="#ARKit-共享锚点" class="headerlink" title="ARKit 共享锚点"></a>ARKit 共享锚点</h2><p>ARKit 新增的共享世界锚点允许将虚拟内容固定在物理空间中的同一位置：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">WorldAnchor</span>(originFromAnchorTransform: transform, sharedWithNearbyParticipants: <span class="literal">true</span>)</span><br></pre></td></tr></table></figure><p>使用前需要检查 worldAnchorSharingAvailability 状态。</p><h2 id="设计建议"><a href="#设计建议" class="headerlink" title="设计建议"></a>设计建议</h2><ul><li>确保应用支持新的共享菜单</li><li>设计时要兼顾附近与远程用户</li><li>充分利用物理空间特性</li><li>考虑使用非沉浸模式作为共享入口</li></ul><h2 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h2><ul><li><a href="https://developer.apple.com/videos/play/wwdc2025/223">了解面向空间商务 App 的增强功能</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2024/10201">自定支持同播共享的空间自影像模板</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2023/10070">打造出色的空间播放体验</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2023/10087">构建空间同播共享体验</a></li></ul><h2 id="文档资源"><a href="#文档资源" class="headerlink" title="文档资源"></a>文档资源</h2><ul><li><a href="https://developer.apple.com/documentation/AVFoundation/AVPlaybackCoordinator">AVPlaybackCoordinator</a></li><li><a href="https://developer.apple.com/documentation/GroupActivities/configure-your-app-for-sharing-with-people-nearby">Configure your visionOS app for sharing with people nearby</a></li><li><a href="https://developer.apple.com/documentation/SwiftUI/View/groupActivityAssociation(_:">groupActivityAssociation(_:)</a>)<blockquote><p>此文章由AI生成，可能存在错误，如有问题，请联系<a href="djs66256@163.com">djs66256@163.com</a></p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;了解如何为同一房间内佩戴 apple vision pro 的用户打造共享体验。我们将展示如何在你的 app 中整合同播共享并充分利用 arkit，介绍与附近 facetime 通话参与者共享窗口的流程有哪些更新，并介绍旨在实现流畅协作的全新 api。探索相关最佳实践，了解如何为身处同一空间的用户打造别具特色、易于发现且引人入胜的协作功能。&lt;br&gt;
    
    </summary>
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/categories/wwdc2025/"/>
    
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/tags/wwdc2025/"/>
    
      <category term="visionos" scheme="http://djs66256.github.io/tags/visionos/"/>
    
      <category term="音频和视频" scheme="http://djs66256.github.io/tags/%E9%9F%B3%E9%A2%91%E5%92%8C%E8%A7%86%E9%A2%91/"/>
    
  </entry>
  
  <entry>
    <title>打造丝滑的多画面播放体验</title>
    <link href="http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_302/"/>
    <id>http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_302/</id>
    <published>2025-06-10T07:53:59.000Z</published>
    <updated>2025-06-10T07:53:59.834Z</updated>
    
    <content type="html"><![CDATA[<p>了解如何在你的 app 中打造高级的多画面播放体验。我们将介绍如何跨多个播放器实现播放同步、通过隔空播放的无缝整合提升多画面播放效果，同时优化播放质量，以便提供引人入胜的多画面播放体验。<br><span id="more"></span></p><p><img src="https://devimages-cdn.apple.com/wwdc-services/images/3055294D-836B-4513-B7B0-0BC5666246B0/10056/10056_wide_250x141_2x.jpg" alt="视频封面"><br><a href="https://developer.apple.com/cn/videos/play/wwdc2025/302/">视频地址</a></p><h1 id="构建专业级多视角播放体验的技术指南"><a href="#构建专业级多视角播放体验的技术指南" class="headerlink" title="构建专业级多视角播放体验的技术指南"></a>构建专业级多视角播放体验的技术指南</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在现代多媒体应用中，多视角播放功能正变得越来越重要。无论是体育赛事的多个机位画面，还是演讲活动的主画面与手语翻译画面，为用户提供同步的多视角观看体验都能显著提升应用价值。本文将详细介绍如何利用苹果的AVFoundation框架构建专业级的多视角播放系统。</p><h2 id="多视角播放的核心挑战"><a href="#多视角播放的核心挑战" class="headerlink" title="多视角播放的核心挑战"></a>多视角播放的核心挑战</h2><p>多视角播放面临三大主要技术挑战：</p><ol><li><strong>播放同步</strong>：确保多个播放器保持精准同步</li><li><strong>隔空播放支持</strong>：处理投屏时的智能路由</li><li><strong>质量优化</strong>：合理分配网络资源保证关键流的播放质量</li></ol><h2 id="播放同步解决方案：AVPlaybackCoordinationMedium"><a href="#播放同步解决方案：AVPlaybackCoordinationMedium" class="headerlink" title="播放同步解决方案：AVPlaybackCoordinationMedium"></a>播放同步解决方案：AVPlaybackCoordinationMedium</h2><p>对于需要严格同步的场景（如体育赛事的多机位画面），AVPlaybackCoordinationMedium组件提供了完美的解决方案。它能自动处理：</p><ul><li>播放速率变化</li><li>跳转操作</li><li>卡顿恢复</li><li>中断事件</li><li>初始同步</li></ul><p>实现代码非常简单：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> coordinationMedium <span class="operator">=</span> <span class="type">AVPlaybackCoordinationMedium</span>()</span><br><span class="line"><span class="keyword">try</span> player1.playbackCoordinator.coordinate(using: coordinationMedium)</span><br><span class="line"><span class="keyword">try</span> player2.playbackCoordinator.coordinate(using: coordinationMedium)</span><br></pre></td></tr></table></figure></p><h2 id="隔空播放支持：AVRoutingPlaybackArbiter"><a href="#隔空播放支持：AVRoutingPlaybackArbiter" class="headerlink" title="隔空播放支持：AVRoutingPlaybackArbiter"></a>隔空播放支持：AVRoutingPlaybackArbiter</h2><p>当用户使用隔空播放功能时，AVRoutingPlaybackArbiter组件可以智能地处理路由：</p><ol><li>视频优先投送至Apple TV（仅支持单流）</li><li>音频优先路由至HomePod</li></ol><p>配置示例：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arbiter <span class="operator">=</span> <span class="type">AVRoutingPlaybackArbiter</span>.shared()</span><br><span class="line">arbiter.preferredParticipantForExternalPlayback <span class="operator">=</span> birdsEyePlayer</span><br><span class="line">arbiter.preferredParticipantForNonMixableAudioRoutes <span class="operator">=</span> birdsEyePlayer</span><br></pre></td></tr></table></figure></p><h2 id="质量优化：网络资源优先级"><a href="#质量优化：网络资源优先级" class="headerlink" title="质量优化：网络资源优先级"></a>质量优化：网络资源优先级</h2><p>在多视角播放中，不同流的重要性不同。通过设置networkResourcePriority参数，可以优化网络资源分配：</p><ul><li>.high：关键流媒体（如主赛场画面）</li><li>.low：次要内容（如观众镜头）</li></ul><p>优先级设置示例：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mainViewPlayer.networkResourcePriority <span class="operator">=</span> .high</span><br><span class="line">crowdViewPlayer.networkResourcePriority <span class="operator">=</span> .low</span><br></pre></td></tr></table></figure></p><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><p>这项技术适用于多种专业场景：</p><ul><li>体育赛事的多机位直播</li><li>会议活动的主画面与手语翻译流</li><li>媒体监看的多频道同步播放</li><li>音乐会/演出的多视角体验</li></ul><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>通过组合使用AVPlaybackCoordinationMedium、AVRoutingPlaybackArbiter和网络资源优先级设置，开发者可以构建专业级的、具有沉浸式体验的多视角播放应用。这些技术不仅能确保播放同步，还能优化用户体验和资源分配。</p><h2 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h2><ul><li><a href="https://developer.apple.com/videos/play/wwdc2021/10225">使用群组活动协调媒体体验</a></li></ul><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><ul><li><a href="https://developer.apple.com/documentation/AVFoundation">AVFoundation</a></li><li><a href="https://developer.apple.com/documentation/AVRouting">AVRouting</a><blockquote><p>此文章由AI生成，可能存在错误，如有问题，请联系<a href="djs66256@163.com">djs66256@163.com</a></p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;了解如何在你的 app 中打造高级的多画面播放体验。我们将介绍如何跨多个播放器实现播放同步、通过隔空播放的无缝整合提升多画面播放效果，同时优化播放质量，以便提供引人入胜的多画面播放体验。&lt;br&gt;
    
    </summary>
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/categories/wwdc2025/"/>
    
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/tags/wwdc2025/"/>
    
      <category term="ios" scheme="http://djs66256.github.io/tags/ios/"/>
    
      <category term="ipados" scheme="http://djs66256.github.io/tags/ipados/"/>
    
      <category term="macos" scheme="http://djs66256.github.io/tags/macos/"/>
    
      <category term="tvos" scheme="http://djs66256.github.io/tags/tvos/"/>
    
      <category term="visionos" scheme="http://djs66256.github.io/tags/visionos/"/>
    
      <category term="音频和视频" scheme="http://djs66256.github.io/tags/%E9%9F%B3%E9%A2%91%E5%92%8C%E8%A7%86%E9%A2%91/"/>
    
  </entry>
  
  <entry>
    <title>通行密钥的新功能</title>
    <link href="http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_279/"/>
    <id>http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_279/</id>
    <published>2025-06-10T07:53:48.000Z</published>
    <updated>2025-06-10T07:53:48.799Z</updated>
    
    <content type="html"><![CDATA[<p>了解 ios、ipados、macos 和 visionos 26 在通行密钥方面的增强功能。我们将探索的重要更新包括：简化注册流程的全新账户创建 api、确保通行密钥保持最新的措施、通过自动通行密钥升级和通行密钥管理端点驱动通行密钥升级的新方式，以及通行密钥的安全导入/导出。了解这些改进如何提升用户体验和安全性，以及如何在 app 中实施这些更新以便提供更流畅、更安全的身份验证体验。为了充分从这个讲座中获益，请先观看 wwdc22 讲座“通行密钥简介”。<br><span id="more"></span></p><p><img src="https://devimages-cdn.apple.com/wwdc-services/images/3055294D-836B-4513-B7B0-0BC5666246B0/9996/9996_wide_250x141_2x.jpg" alt="视频封面"><br><a href="https://developer.apple.com/cn/videos/play/wwdc2025/279/">视频地址</a></p><h1 id="iOS-通行密钥全面升级：五大新功能深度解析"><a href="#iOS-通行密钥全面升级：五大新功能深度解析" class="headerlink" title="iOS 通行密钥全面升级：五大新功能深度解析"></a>iOS 通行密钥全面升级：五大新功能深度解析</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>密码时代正在终结！苹果在 iOS、iPadOS、macOS 和 visionOS 26 中为通行密钥带来五大创新功能，彻底重塑数字身份验证体验。本文将详解这些改变游戏规则的技术革新，从一键注册到安全迁移，带您全面了解如何打造更流畅、更安全的无密码未来。</p><h2 id="核心功能解析"><a href="#核心功能解析" class="headerlink" title="核心功能解析"></a>核心功能解析</h2><h3 id="1-闪电注册：账户创建-API-革新"><a href="#1-闪电注册：账户创建-API-革新" class="headerlink" title="1. 闪电注册：账户创建 API 革新"></a>1. 闪电注册：账户创建 API 革新</h3><p>传统密码注册流程繁琐：</p><ol><li>填写邮箱/姓名表单</li><li>设置复杂密码（或使用自动强密码）</li><li>完成验证步骤</li></ol><p>新方案实现质的飞跃：</p><ul><li>预填可编辑的个人信息</li><li>Face ID 瞬间完成认证</li><li>全自动通行密钥生成</li></ul><p>技术实现关键点：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> provider <span class="operator">=</span> <span class="type">ASAuthorizationAccountCreationProvider</span>()</span><br><span class="line"><span class="keyword">let</span> request <span class="operator">=</span> provider.createPlatformPublicKeyCredentialRegistrationRequest(</span><br><span class="line">    acceptedContactIdentifiers: [.email, .phoneNumber],</span><br><span class="line">    shouldRequestName: <span class="literal">true</span>,</span><br><span class="line">    relyingPartyIdentifier: <span class="string">&quot;example.com&quot;</span>,</span><br><span class="line">    challenge: <span class="keyword">try</span> <span class="keyword">await</span> fetchChallenge(),</span><br><span class="line">    userID: <span class="keyword">try</span> <span class="keyword">await</span> fetchUserID()</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><h3 id="2-实时同步：通行密钥更新机制"><a href="#2-实时同步：通行密钥更新机制" class="headerlink" title="2. 实时同步：通行密钥更新机制"></a>2. 实时同步：通行密钥更新机制</h3><p>当用户变更账户信息时，新的 Signal API 确保：</p><ul><li>邮箱/用户名变更实时同步</li><li>被撤销的通行密钥立即失效</li><li>密码应用永远显示准确信息</li></ul><p>开发者需实现的三种关键操作：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 更新用户名</span></span><br><span class="line">.reportPublicKeyCredentialUpdate(<span class="operator">...</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 撤销凭证</span></span><br><span class="line">.reportAllAcceptedPublicKeyCredentials(<span class="operator">...</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 移除密码</span></span><br><span class="line">.reportUnusedPasswordCredential(<span class="operator">...</span>)</span><br></pre></td></tr></table></figure></p><h3 id="3-无缝升级：自动通行密钥转换"><a href="#3-无缝升级：自动通行密钥转换" class="headerlink" title="3. 无缝升级：自动通行密钥转换"></a>3. 无缝升级：自动通行密钥转换</h3><p>密码用户升级路径优化：</p><ul><li>登录后自动创建通行密钥</li><li>零摩擦用户体验</li><li>后台静默处理失败情况</li></ul><p>核心代码示例：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> request <span class="operator">=</span> provider.createCredentialRegistrationRequest(</span><br><span class="line">    challenge: <span class="keyword">try</span> <span class="keyword">await</span> fetchChallenge(),</span><br><span class="line">    name: accountDetails.userName,</span><br><span class="line">    userID: accountDetails.userID,</span><br><span class="line">    requestStyle: .conditional  <span class="comment">// 关键参数</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><h3 id="4-可视化管理：通行密钥端点"><a href="#4-可视化管理：通行密钥端点" class="headerlink" title="4. 可视化管理：通行密钥端点"></a>4. 可视化管理：通行密钥端点</h3><p>通过标准化 well-known URL 实现：</p><ul><li>直接跳转管理页面</li><li>必须支持未经认证的访问</li><li>JSON 响应格式要求：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;enroll&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://example.com/add-passkey&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;manage&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://example.com/manage-passkeys&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="5-安全迁移：导入导出功能"><a href="#5-安全迁移：导入导出功能" class="headerlink" title="5. 安全迁移：导入导出功能"></a>5. 安全迁移：导入导出功能</h3><p>突破性进步体现在：</p><ul><li>应用间直接传输</li><li>强制本地生物认证</li><li>FIDO Alliance 标准化格式</li><li>彻底避免凭证文件泄露</li></ul><h2 id="实施路线图"><a href="#实施路线图" class="headerlink" title="实施路线图"></a>实施路线图</h2><ol><li>优先采用账户创建 API 优化新用户注册</li><li>集成 Signal API 保持凭证信息准确</li><li>为密码用户启用自动升级通道</li><li>部署 well-known URL 提升管理可见性</li><li>教育用户使用安全迁移功能</li></ol><h2 id="行业数据印证"><a href="#行业数据印证" class="headerlink" title="行业数据印证"></a>行业数据印证</h2><ul><li>69% 用户已拥有至少一个通行密钥（FIDO Alliance 2025）</li><li>通行密钥登录成功率高达 97%（TikTok 实测）</li><li>比传统密码成功率高 4 倍（Google 数据）</li></ul><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>通行密钥正在重塑数字身份验证的格局。通过实施这五大创新功能，开发者不仅能提供远超密码的安全保障，还能创造令人愉悦的用户体验。现在是时候全面拥抱无密码未来，让每一次登录都变得快速、简单且牢不可破。</p><h2 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h2><ul><li><a href="https://developer.apple.com/videos/play/wwdc2024/10125">利用通行密钥升级和凭证管理器简化登录体验</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2022/10092">通行密钥简介</a></li></ul><h2 id="文档资源"><a href="#文档资源" class="headerlink" title="文档资源"></a>文档资源</h2><ul><li><a href="https://developer.apple.com/documentation/AuthenticationServices/ASCredentialExportManager">ASCredentialExportManager 文档</a></li><li><a href="https://developer.apple.com/documentation/AuthenticationServices/ASCredentialProviderViewController">ASCredentialProviderViewController 文档</a></li><li><a href="https://developer.apple.com/documentation/AuthenticationServices/performing-fast-account-creation-with-passkeys">快速账户创建指南</a><blockquote><p>此文章由AI生成，可能存在错误，如有问题，请联系<a href="djs66256@163.com">djs66256@163.com</a></p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;了解 ios、ipados、macos 和 visionos 26 在通行密钥方面的增强功能。我们将探索的重要更新包括：简化注册流程的全新账户创建 api、确保通行密钥保持最新的措施、通过自动通行密钥升级和通行密钥管理端点驱动通行密钥升级的新方式，以及通行密钥的安全导入/导出。了解这些改进如何提升用户体验和安全性，以及如何在 app 中实施这些更新以便提供更流畅、更安全的身份验证体验。为了充分从这个讲座中获益，请先观看 wwdc22 讲座“通行密钥简介”。&lt;br&gt;
    
    </summary>
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/categories/wwdc2025/"/>
    
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/tags/wwdc2025/"/>
    
      <category term="ios" scheme="http://djs66256.github.io/tags/ios/"/>
    
      <category term="ipados" scheme="http://djs66256.github.io/tags/ipados/"/>
    
      <category term="macos" scheme="http://djs66256.github.io/tags/macos/"/>
    
      <category term="tvos" scheme="http://djs66256.github.io/tags/tvos/"/>
    
      <category term="visionos" scheme="http://djs66256.github.io/tags/visionos/"/>
    
      <category term="隐私与安全" scheme="http://djs66256.github.io/tags/%E9%9A%90%E7%A7%81%E4%B8%8E%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>将隐私保护融入开发流程</title>
    <link href="http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_246/"/>
    <id>http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_246/</id>
    <published>2025-06-10T07:53:21.000Z</published>
    <updated>2025-06-10T07:53:21.456Z</updated>
    
    <content type="html"><![CDATA[<p>从规划阶段到部署，了解如何在你的 app 中内置隐私保护功能。我们会介绍在开发生命周期各个阶段整合隐私保护功能的实用方法，重点关注数据最小化、设备端处理以及透明度和控制权。探索如何使用 apple 丰富的工具和框架来保护用户数据，打造尊重隐私的 app 体验。<br><span id="more"></span></p><p><img src="https://devimages-cdn.apple.com/wwdc-services/images/3055294D-836B-4513-B7B0-0BC5666246B0/9945/9945_wide_250x141_2x.jpg" alt="视频封面"><br><a href="https://developer.apple.com/cn/videos/play/wwdc2025/246/">视频地址</a></p><h1 id="从开发伊始构建隐私保护：Apple隐私工程师的实践指南"><a href="#从开发伊始构建隐私保护：Apple隐私工程师的实践指南" class="headerlink" title="从开发伊始构建隐私保护：Apple隐私工程师的实践指南"></a>从开发伊始构建隐私保护：Apple隐私工程师的实践指南</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在当今数据驱动的数字世界，隐私保护已成为应用开发的核心议题。Apple隐私工程师Joey Tyson通过这篇技术指南，系统性地介绍了如何在整个应用开发生命周期中集成隐私保护设计。本文将带你了解Apple的四大隐私支柱，并展示如何利用Apple平台工具实现真正的隐私友好型应用开发。</p><h2 id="Apple的隐私哲学"><a href="#Apple的隐私哲学" class="headerlink" title="Apple的隐私哲学"></a>Apple的隐私哲学</h2><h3 id="定义隐私的本质"><a href="#定义隐私的本质" class="headerlink" title="定义隐私的本质"></a>定义隐私的本质</h3><p>Steve Jobs曾将隐私定义为”用简单语言反复告知用户他们正在同意什么”。这一理念体现了Apple对隐私的三层理解：  </p><ol><li>隐私关乎人与技术的交互关系  </li><li>核心是用户数据的处理方式  </li><li>必须考虑数据主体的期望与使用背景  </li></ol><h3 id="四大隐私支柱"><a href="#四大隐私支柱" class="headerlink" title="四大隐私支柱"></a>四大隐私支柱</h3><p>Apple将隐私理念转化为可执行的工程原则：  </p><ul><li><strong>数据最小化</strong>：只收集必要数据  </li><li><strong>设备端处理</strong>：尽可能在本地完成数据处理  </li><li><strong>透明度与控制</strong>：让用户知情并掌握选择权  </li><li><strong>安全保护</strong>：通过技术手段保障数据安全  </li></ul><h2 id="开发全周期的隐私实践"><a href="#开发全周期的隐私实践" class="headerlink" title="开发全周期的隐私实践"></a>开发全周期的隐私实践</h2><h3 id="规划阶段：定义隐私保证"><a href="#规划阶段：定义隐私保证" class="headerlink" title="规划阶段：定义隐私保证"></a>规划阶段：定义隐私保证</h3><p>在项目初期就需要确立清晰的隐私承诺，例如：  </p><ul><li>“搜索功能不会永久存储用户位置”  </li><li>“照片分析仅在使用改进功能选项时上传”  </li><li>“聊天内容采用端到端加密架构”  </li></ul><p>这些高层声明将指导后续的技术实现和用户沟通。</p><h3 id="设计阶段：构建信任体验"><a href="#设计阶段：构建信任体验" class="headerlink" title="设计阶段：构建信任体验"></a>设计阶段：构建信任体验</h3><p>优秀的设计能让隐私保护无缝融入用户体验：  </p><ul><li>首次启动时展示隐私摘要（如Apple原生应用）  </li><li>实时显示敏感权限使用状态（如麦克风激活指示器）  </li><li>上下文敏感的权限请求（仅在需要时申请网络权限）  </li></ul><p>参考《人机界面指南》获取详细设计规范。</p><h3 id="开发阶段：技术实现方案"><a href="#开发阶段：技术实现方案" class="headerlink" title="开发阶段：技术实现方案"></a>开发阶段：技术实现方案</h3><h4 id="隐私友好型UI组件"><a href="#隐私友好型UI组件" class="headerlink" title="隐私友好型UI组件"></a>隐私友好型UI组件</h4><p>Apple提供了多种开箱即用的隐私控件：  </p><p><strong>照片选择器（避免全库访问）</strong><br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">PhotosPicker</span>(</span><br><span class="line">    selection: <span class="variable">$viewModel</span>.selection,</span><br><span class="line">    matching: .images,</span><br><span class="line">    preferredItemEncoding: .current,</span><br><span class="line">    photoLibrary: .shared()</span><br><span class="line">) &#123;</span><br><span class="line">    <span class="type">Text</span>(<span class="string">&quot;选择照片&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>定位按钮（明确用户意图）</strong><br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">LocationButton</span>(<span class="type">LocationButton</span>.<span class="type">Title</span>.currentLocation) &#123;</span><br><span class="line">    manager.startUpdatingLocation()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="安全数据交互架构"><a href="#安全数据交互架构" class="headerlink" title="安全数据交互架构"></a>安全数据交互架构</h4><ul><li><strong>CloudKit端到端加密</strong>：  <figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myRecord.encryptedValues[<span class="string">&quot;encryptedStringField&quot;</span>] <span class="operator">=</span> <span class="string">&quot;敏感值&quot;</span></span><br></pre></td></tr></table></figure></li><li><strong>同态加密</strong>：实现私有信息检索(PIR)</li><li><strong>Private Access Tokens</strong>：设备验证替代用户识别</li><li><strong>AdAttributionKit</strong>：隐私安全的广告效果衡量</li></ul><h4 id="本地化处理能力"><a href="#本地化处理能力" class="headerlink" title="本地化处理能力"></a>本地化处理能力</h4><ul><li>Core ML框架支持完全设备端的机器学习  </li><li>App Group容器实现安全数据共享  </li><li>严格管理第三方SDK的隐私清单审查  </li></ul><h3 id="测试与部署"><a href="#测试与部署" class="headerlink" title="测试与部署"></a>测试与部署</h3><h4 id="构建测试金字塔"><a href="#构建测试金字塔" class="headerlink" title="构建测试金字塔"></a>构建测试金字塔</h4><ul><li>单元测试验证隐私控制逻辑  </li><li>集成测试检查跨系统数据流  </li><li>UI测试确认设置变更的实际影响  </li><li>使用iOS 15.2+的”App隐私报告”进行最终审查</li></ul><h4 id="App-Store上架要求"><a href="#App-Store上架要求" class="headerlink" title="App Store上架要求"></a>App Store上架要求</h4><ul><li>准确的隐私标签（数据类型与用途）  </li><li>完整的隐私政策文档  </li><li>可操作的数据管理入口  </li><li>Xcode生成的隐私清单合规报告  </li></ul><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>将隐私保护融入开发流程不是额外负担，而是构建用户信任的基础。通过Apple提供的丰富工具链和清晰的指导原则，开发者可以创造出既功能强大又尊重用户隐私的优秀应用。从规划阶段的隐私保证定义，到部署阶段的合规审查，每个环节都是展示对用户承诺的机会。</p><h2 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h2><ul><li><a href="https://developer.apple.com/videos/play/wwdc2025/221">AdAttributionKit的新功能</a>  </li><li><a href="https://developer.apple.com/videos/play/wwdc2024/10060">了解AdAttributionKit</a>  </li><li><a href="https://developer.apple.com/videos/play/wwdc2024/10161">利用Core ML在设备端部署机器学习和AI模型</a>  </li><li><a href="https://developer.apple.com/videos/play/wwdc2024/10159">将机器学习和AI模型移植到Apple芯片</a>  </li><li><a href="https://developer.apple.com/videos/play/wwdc2024/10123">隐私保护新功能</a>  </li></ul><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><ul><li><a href="https://developer.apple.com/documentation/AdAttributionKit">AdAttributionKit</a>  </li><li><a href="https://developer.apple.com/documentation/Xcode/configuring-app-groups">配置应用组</a>  </li><li><a href="https://developer.apple.com/design/human-interface-guidelines/privacy">隐私设计的人机界面指南</a>  </li><li><a href="https://developer.apple.com/documentation/BundleResources/privacy-manifest-files">隐私清单文件</a><blockquote><p>此文章由AI生成，可能存在错误，如有问题，请联系<a href="djs66256@163.com">djs66256@163.com</a></p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从规划阶段到部署，了解如何在你的 app 中内置隐私保护功能。我们会介绍在开发生命周期各个阶段整合隐私保护功能的实用方法，重点关注数据最小化、设备端处理以及透明度和控制权。探索如何使用 apple 丰富的工具和框架来保护用户数据，打造尊重隐私的 app 体验。&lt;br&gt;
    
    </summary>
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/categories/wwdc2025/"/>
    
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/tags/wwdc2025/"/>
    
      <category term="ios" scheme="http://djs66256.github.io/tags/ios/"/>
    
      <category term="ipados" scheme="http://djs66256.github.io/tags/ipados/"/>
    
      <category term="macos" scheme="http://djs66256.github.io/tags/macos/"/>
    
      <category term="tvos" scheme="http://djs66256.github.io/tags/tvos/"/>
    
      <category term="visionos" scheme="http://djs66256.github.io/tags/visionos/"/>
    
      <category term="watchos" scheme="http://djs66256.github.io/tags/watchos/"/>
    
      <category term="隐私与安全" scheme="http://djs66256.github.io/tags/%E9%9A%90%E7%A7%81%E4%B8%8E%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>借助 Wi-Fi Aware 增强设备连接性能</title>
    <link href="http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_228/"/>
    <id>http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_228/</id>
    <published>2025-06-10T07:52:59.000Z</published>
    <updated>2025-06-10T07:52:59.526Z</updated>
    
    <content type="html"><![CDATA[<p>了解如何使用 wi-fi aware 建立对等网络连接。我们还将介绍如何以带宽更高、延迟更低的网络连接性能实时共享视频、传输大文件，以及操控配件。此外，你将了解如何借助 devicediscoveryui、accessorysetupkit 和 network 框架，在自己的 app 中使用 wi-fi aware。<br><span id="more"></span></p><p><img src="https://devimages-cdn.apple.com/wwdc-services/images/3055294D-836B-4513-B7B0-0BC5666246B0/9922/9922_wide_250x141_2x.jpg" alt="视频封面"><br><a href="https://developer.apple.com/cn/videos/play/wwdc2025/228/">视频地址</a></p><h1 id="使用-Wi-Fi-Aware-实现高效设备点对点连接"><a href="#使用-Wi-Fi-Aware-实现高效设备点对点连接" class="headerlink" title="使用 Wi-Fi Aware 实现高效设备点对点连接"></a>使用 Wi-Fi Aware 实现高效设备点对点连接</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在当今互联设备激增的时代，Wi-Fi Aware 技术为开发者提供了一种创新的点对点连接解决方案。这项技术允许设备直接通信，无需依赖传统路由器或中心服务器，特别适合需要高带宽、低延迟的应用场景。本文将全面介绍如何在 iOS 应用中集成 Wi-Fi Aware 功能，从基础概念到实际实现。</p><h2 id="Wi-Fi-Aware-技术概览"><a href="#Wi-Fi-Aware-技术概览" class="headerlink" title="Wi-Fi Aware 技术概览"></a>Wi-Fi Aware 技术概览</h2><p>Wi-Fi Aware 实现了设备间的直接通信，具有以下核心优势：</p><ul><li><strong>动态连接建立</strong>：设备在运行时相互发现并形成安全链接</li><li><strong>并行工作能力</strong>：可与常规 Wi-Fi 连接同时使用</li><li><strong>全球标准</strong>：由 Wi-Fi 联盟维护，确保跨平台互操作性</li></ul><p>典型应用场景包括：</p><ul><li>高速文件传输</li><li>实时媒体流传输</li><li>配件控制</li><li>屏幕共享</li></ul><h2 id="实现-Wi-Fi-Aware-的核心概念"><a href="#实现-Wi-Fi-Aware-的核心概念" class="headerlink" title="实现 Wi-Fi Aware 的核心概念"></a>实现 Wi-Fi Aware 的核心概念</h2><h3 id="服务配置"><a href="#服务配置" class="headerlink" title="服务配置"></a>服务配置</h3><p>Wi-Fi Aware 使用”服务”概念来发现和连接设备：</p><ul><li>服务名称规范：<ul><li>仅含字母、数字和短划线</li><li>不超过15个字符</li><li>建议在 IANA 注册以避免命名冲突</li></ul></li><li>服务角色：<ul><li>发布者（服务器角色）</li><li>订阅者（客户端角色）</li></ul></li></ul><p>在 Info.plist 中的配置示例：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>WiFiAwareServices<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.example.fileservice<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>WAPublishable<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>WASubscribable<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.example.drone<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>WASubscribable<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>设备兼容性检查：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> WiFiAware</span><br><span class="line"><span class="keyword">guard</span> <span class="type">WACapabilities</span>.supportedFeatures.contains(.wifiAware) <span class="keyword">else</span> &#123; </span><br><span class="line">    <span class="comment">// 处理设备不支持情况</span></span><br><span class="line">    <span class="keyword">return</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="设备配对流程"><a href="#设备配对流程" class="headerlink" title="设备配对流程"></a>设备配对流程</h2><p>Wi-Fi Aware 提供两种配对框架：</p><ol><li><strong>DeviceDiscoveryUI</strong>：<ul><li>适用于应用间或应用对设备连接</li><li>支持 Apple 和第三方设备</li></ul></li><li><strong>AccessorySetupKit</strong>：<ul><li>专为配件制造商设计</li><li>推荐用于多传输配件</li></ul></li></ol><h3 id="使用-DeviceDiscoveryUI-的代码示例"><a href="#使用-DeviceDiscoveryUI-的代码示例" class="headerlink" title="使用 DeviceDiscoveryUI 的代码示例"></a>使用 DeviceDiscoveryUI 的代码示例</h3><p>发布方代码：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> pairingView <span class="operator">=</span> <span class="type">DevicePairingView</span>(</span><br><span class="line">    configuration: <span class="type">DevicePairingConfiguration</span>(</span><br><span class="line">        serviceIdentifier: <span class="string">&quot;com.example.fileservice&quot;</span>,</span><br><span class="line">        deviceName: <span class="string">&quot;My Device&quot;</span></span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"><span class="comment">// 显示配对界面</span></span><br></pre></td></tr></table></figure></p><p>订阅方代码：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> picker <span class="operator">=</span> <span class="type">DevicePicker</span>(</span><br><span class="line">    configuration: <span class="type">DevicePickerConfiguration</span>(</span><br><span class="line">        serviceIdentifier: <span class="string">&quot;com.example.fileservice&quot;</span></span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"><span class="comment">// 显示设备选择界面</span></span><br></pre></td></tr></table></figure></p><h2 id="建立连接"><a href="#建立连接" class="headerlink" title="建立连接"></a>建立连接</h2><p>连接建立的三个关键步骤：</p><ol><li><p><strong>设备筛选</strong>：</p><ul><li>使用谓词筛选目标设备<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> predicate <span class="operator">=</span> <span class="type">NSPredicate</span>(format: <span class="string">&quot;name BEGINSWITH &#x27;iPhone&#x27;&quot;</span>)</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>创建监听器/浏览器</strong>：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> listener <span class="operator">=</span> <span class="keyword">try</span> <span class="type">NetworkListener</span>(</span><br><span class="line">    service: <span class="string">&quot;com.example.fileservice_tcp&quot;</span>,</span><br><span class="line">    devicePredicate: predicate</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li><p><strong>启动连接</strong>：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">listener.start(queue: .main)</span><br><span class="line"><span class="comment">// 处理连接请求</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="性能优化技巧"><a href="#性能优化技巧" class="headerlink" title="性能优化技巧"></a>性能优化技巧</h2><ol><li><p><strong>调整性能模式</strong>：</p><ul><li>批量模式：节能但延迟较高</li><li>实时模式：低延迟但耗电较高</li></ul></li><li><p><strong>设置服务等级</strong>：</p><ul><li>尽力服务(Best Effort)</li><li>交互式视频(Interactive Video)</li><li>语音(Voice)</li></ul></li></ol><p>性能监控示例：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">connection.currentPath<span class="operator">?</span>.performanceReport<span class="operator">?</span>.throughput</span><br><span class="line">connection.currentPath<span class="operator">?</span>.performanceReport<span class="operator">?</span>.latency</span><br></pre></td></tr></table></figure></p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>Wi-Fi Aware 为开发者提供了强大的点对点连接能力，特别适合需要高带宽、低延迟的应用场景。通过合理配置服务和优化连接参数，您可以打造出色的用户体验。建议参考官方文档和示例代码进一步探索这项技术的潜力。</p><h2 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h2><ul><li><a href="https://developer.apple.com/videos/play/wwdc2024/10203">了解 AccessorySetupKit</a></li></ul><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><ul><li><a href="https://developer.apple.com/documentation/WiFiAware">Wi-Fi Aware 官方文档</a><blockquote><p>此文章由AI生成，可能存在错误，如有问题，请联系<a href="djs66256@163.com">djs66256@163.com</a></p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;了解如何使用 wi-fi aware 建立对等网络连接。我们还将介绍如何以带宽更高、延迟更低的网络连接性能实时共享视频、传输大文件，以及操控配件。此外，你将了解如何借助 devicediscoveryui、accessorysetupkit 和 network 框架，在自己的 app 中使用 wi-fi aware。&lt;br&gt;
    
    </summary>
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/categories/wwdc2025/"/>
    
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/tags/wwdc2025/"/>
    
      <category term="ios" scheme="http://djs66256.github.io/tags/ios/"/>
    
      <category term="ipados" scheme="http://djs66256.github.io/tags/ipados/"/>
    
      <category term="macos" scheme="http://djs66256.github.io/tags/macos/"/>
    
      <category term="tvos" scheme="http://djs66256.github.io/tags/tvos/"/>
    
      <category term="visionos" scheme="http://djs66256.github.io/tags/visionos/"/>
    
      <category term="watchos" scheme="http://djs66256.github.io/tags/watchos/"/>
    
      <category term="隐私与安全" scheme="http://djs66256.github.io/tags/%E9%9A%90%E7%A7%81%E4%B8%8E%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>visionOS 26 的新功能</title>
    <link href="http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_317/"/>
    <id>http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_317/</id>
    <published>2025-06-10T07:52:54.000Z</published>
    <updated>2025-06-10T07:52:54.179Z</updated>
    
    <content type="html"><![CDATA[<p>探索 visionos 26 中精彩的新功能。了解增强版视体 api，以及如何综合利用 swiftui、realitykit、arkit 的强大功能。探索如何利用更快的手部跟踪和空间配件输入，构建更加引人入胜的 app 和游戏。抢先预览同播共享、compositor services、沉浸式媒体、空间网页、企业 api 等方面的更新。<br><span id="more"></span></p><p><img src="https://devimages-cdn.apple.com/wwdc-services/images/3055294D-836B-4513-B7B0-0BC5666246B0/10062/10062_wide_250x141_2x.jpg" alt="视频封面"><br><a href="https://developer.apple.com/cn/videos/play/wwdc2025/317/">视频地址</a></p><h1 id="visionOS-26-新特性全解析：从空间计算到企业应用"><a href="#visionOS-26-新特性全解析：从空间计算到企业应用" class="headerlink" title="visionOS 26 新特性全解析：从空间计算到企业应用"></a>visionOS 26 新特性全解析：从空间计算到企业应用</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>Apple Vision Pro 自发布以来，开发者们已经在这个平台上创造了无数惊艳的作品。今年，visionOS 26 带来了更多突破性功能。本文将全面介绍 visionOS 26 的新特性，包括增强的空间计算 API、系统优化、游戏开发工具、共享体验以及企业级功能。</p><h2 id="空间计算功能升级"><a href="#空间计算功能升级" class="headerlink" title="空间计算功能升级"></a>空间计算功能升级</h2><p>SwiftUI 依然是构建 Apple Vision Pro 应用的理想选择。visionOS 26 新增了多项空间计算功能：</p><ol><li><p><strong>深度对齐</strong>：通过 <code>depthAlignment</code> 修饰符实现 3D 元素的智能布局</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">VStackLayout</span>().depthAlignment(.front) &#123;</span><br><span class="line">    <span class="type">ResizableLandmarkModel</span>()</span><br><span class="line">    <span class="type">LandmarkNameCard</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>3D 旋转支持</strong>：使用 <code>rotation3DLayout</code> 让物体在空间中自然转动</p></li><li><p><strong>动态边界限制</strong>：应用内容能与现实环境无缝融合</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.preferredWindowClippingMargins(.all, <span class="number">400</span>)</span><br></pre></td></tr></table></figure></li><li><p><strong>对象操控 API</strong>：只需添加 <code>manipulable()</code> 修饰符，用户就能像摆弄真实物体一样旋转 3D 模型</p></li></ol><h2 id="系统功能增强"><a href="#系统功能增强" class="headerlink" title="系统功能增强"></a>系统功能增强</h2><p>visionOS 26 在系统层面也带来了多项革新：</p><ul><li><strong>Apple 智能功能</strong>：设备端大语言模型通过 Foundation Models 框架开放访问</li><li><strong>图乐园增强</strong>：新增油画/矢量画风格，支持 ChatGPT 生成图像</li><li><strong>语音转文本</strong>：全新 SpeechAnalyzer API 提供更快速精准的转录服务</li><li><strong>空间持久化</strong>：窗口和内容现在会记住位置，重启后自动恢复</li><li><strong>小组件进化</strong>：新增细节层级控制 <code>levelOfDetail</code> 和材质调节 <code>widgetTexture</code> API</li></ul><h2 id="游戏开发新工具"><a href="#游戏开发新工具" class="headerlink" title="游戏开发新工具"></a>游戏开发新工具</h2><p>游戏开发者将获得多项强大工具：</p><ul><li><strong>3倍速手部追踪</strong>：提升竞技类游戏响应速度</li><li><strong>PS VR2 控制器支持</strong>：六自由度追踪+触觉反馈</li><li><strong>内存限制提升</strong>：可移植更高端的 iPad 游戏</li><li><strong>Metal 渲染增强</strong>：新增悬停效果与动态渲染质量调控</li></ul><p>此外，macOS 空间渲染功能允许开发者借助 Mac 的算力在 Vision Pro 上呈现高品质内容，TabletopKit 则简化了多人游戏的网络同步实现。</p><h2 id="共享与媒体体验"><a href="#共享与媒体体验" class="headerlink" title="共享与媒体体验"></a>共享与媒体体验</h2><p>visionOS 26 在共享体验方面也有重大突破：</p><ul><li><strong>就近窗口共享</strong>：同处一室的多人协同功能</li><li><strong>空间自画像优化</strong>：提升毛发质感与表情真实度</li><li><strong>180°/360°视频支持</strong>：新增 Apple Projected Media Profile (APMP) 标准</li><li><strong>Safari 空间浏览</strong>：3D 模型直嵌网页，支持拖拽至现实空间</li></ul><h2 id="企业级功能"><a href="#企业级功能" class="headerlink" title="企业级功能"></a>企业级功能</h2><p>针对企业场景，visionOS 26 新增了多项专属功能：</p><ul><li><strong>主摄像头访问</strong>：ARKit 新增 CameraRegionProvider 稳定拍摄区域</li><li><strong>内容保护</strong>：Protected Content API 防止敏感信息截屏</li><li><strong>窗口跟随模式</strong>：应用界面实时追踪用户移动</li><li><strong>快速设备移交</strong>：通过 Apple 商务管理实现安全的多用户切换</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>visionOS 26 带来了全方位的功能升级，从开发者工具到用户体验，再到企业级应用场景，都有了显著的提升。这些新功能将为开发者创造更丰富、更具沉浸感的应用程序提供强大支持。</p><h2 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h2><ul><li><a href="https://developer.apple.com/videos/play/wwdc2025/318">与附近用户共享 visionOS 体验</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2025/403">了解 Apple 沉浸视频技术</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2025/289">探索 visionOS 上的空间配件输入</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2025/287">RealityKit 的新功能</a></li></ul><h2 id="文档资源"><a href="#文档资源" class="headerlink" title="文档资源"></a>文档资源</h2><ul><li><a href="https://developer.apple.com/documentation/TabletopKit">TabletopKit 开发文档</a><blockquote><p>此文章由AI生成，可能存在错误，如有问题，请联系<a href="djs66256@163.com">djs66256@163.com</a></p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;探索 visionos 26 中精彩的新功能。了解增强版视体 api，以及如何综合利用 swiftui、realitykit、arkit 的强大功能。探索如何利用更快的手部跟踪和空间配件输入，构建更加引人入胜的 app 和游戏。抢先预览同播共享、compositor services、沉浸式媒体、空间网页、企业 api 等方面的更新。&lt;br&gt;
    
    </summary>
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/categories/wwdc2025/"/>
    
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/tags/wwdc2025/"/>
    
      <category term="visionos" scheme="http://djs66256.github.io/tags/visionos/"/>
    
      <category term="音频和视频" scheme="http://djs66256.github.io/tags/%E9%9F%B3%E9%A2%91%E5%92%8C%E8%A7%86%E9%A2%91/"/>
    
  </entry>
  
  <entry>
    <title>UIKit 的新功能</title>
    <link href="http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_243/"/>
    <id>http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_243/</id>
    <published>2025-06-10T07:52:49.000Z</published>
    <updated>2025-06-10T07:52:49.043Z</updated>
    
    <content type="html"><![CDATA[<p>借助 uikit 最新推出的多种 api，对你的 app 进行现代化改造，这些更新包括增强的菜单栏支持、自动观察跟踪、全新 ui 更新方法，以及动画效果改进。我们还将介绍如何在 uikitapp 中包含 swiftui 场景，并探讨 sf symbols、hdr 颜色选择器等内容。<br><span id="more"></span></p><p><img src="https://devimages-cdn.apple.com/wwdc-services/images/3055294D-836B-4513-B7B0-0BC5666246B0/9943/9943_wide_250x141_2x.jpg" alt="视频封面"><br><a href="https://developer.apple.com/cn/videos/play/wwdc2025/243/">视频地址</a></p><h1 id="深入解析UIKit新特性：从菜单栏到SwiftUI整合"><a href="#深入解析UIKit新特性：从菜单栏到SwiftUI整合" class="headerlink" title="深入解析UIKit新特性：从菜单栏到SwiftUI整合"></a>深入解析UIKit新特性：从菜单栏到SwiftUI整合</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>UIKit作为苹果生态系统的核心开发框架，在iOS 26中迎来了一系列重大更新。无论是增强的菜单栏支持、自动观察追踪机制，还是与SwiftUI的深度整合，这些新特性都将为开发者带来更强大的工具和更流畅的开发体验。本文将全面解析这些创新功能，帮助您快速掌握UIKit的最新进展。</p><h2 id="全新设计系统带来的视觉革新"><a href="#全新设计系统带来的视觉革新" class="headerlink" title="全新设计系统带来的视觉革新"></a>全新设计系统带来的视觉革新</h2><p>iOS 26引入了名为”液态玻璃”的突破性材质设计，具有以下显著特点：</p><ul><li>半透明特性与动态视觉效果完美结合</li><li>支持镜面高光和折射等高级渲染效果</li><li>导航栏、搜索框等标准组件全面升级</li></ul><p>开发适配建议：</p><ol><li>使用背景扩展视图实现边栏玻璃面板的优雅显示</li><li>为自定义控件应用玻璃材质提升专业质感</li><li>启用滚动边缘特效增强导航元素可视性</li></ol><h2 id="容器与布局的增强"><a href="#容器与布局的增强" class="headerlink" title="容器与布局的增强"></a>容器与布局的增强</h2><p>UISplitViewController在iOS 26中获得重大改进：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查器支持示例</span></span><br><span class="line"><span class="keyword">let</span> splitVC <span class="operator">=</span> <span class="type">UISplitViewController</span>(style: .tripleColumn)</span><br><span class="line">splitVC.showsSecondaryOnlyButton <span class="operator">=</span> <span class="literal">true</span>  <span class="comment">// 显示次级视图切换按钮</span></span><br></pre></td></tr></table></figure><br>新特性包括：</p><ul><li>一流的检查器支持，可显示选中内容的详细信息</li><li>支持通过拖拽调整分屏控制器栏宽</li><li>指针形状自动变化提示可调整方向</li></ul><h2 id="菜单栏的跨平台进化"><a href="#菜单栏的跨平台进化" class="headerlink" title="菜单栏的跨平台进化"></a>菜单栏的跨平台进化</h2><p>iPadOS现在支持完整的macOS风格菜单栏，关键特性包括：</p><ul><li>从屏幕顶部轻扫即可调出应用菜单</li><li>支持全部菜单功能（图像、子菜单、复选标记等）</li><li>保持不可用命令可见但禁用状态</li></ul><p>配置主菜单系统的新API：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> config <span class="operator">=</span> <span class="type">UIMainMenuSystem</span>.<span class="type">Configuration</span>()</span><br><span class="line">config.printingPreference <span class="operator">=</span> .included  <span class="comment">// 包含打印命令</span></span><br><span class="line">config.inspectorPreference <span class="operator">=</span> .removed  <span class="comment">// 移除检查器命令</span></span><br><span class="line">config.findingConfiguration.style <span class="operator">=</span> .search  <span class="comment">// 整合查找功能</span></span><br></pre></td></tr></table></figure></p><h2 id="架构层面的现代化改进"><a href="#架构层面的现代化改进" class="headerlink" title="架构层面的现代化改进"></a>架构层面的现代化改进</h2><p>iOS 26为UIKit带来了多项底层革新：</p><ol><li><strong>自动观察追踪</strong>：在<code>layoutSubviews()</code>等方法中自动追踪Observable对象</li><li><strong>updateProperties()</strong>：新增的独立属性更新机制</li><li><strong>SwiftUI整合</strong>：通过<code>UIHostingSceneDelegate</code>嵌入SwiftUI场景</li><li><strong>HDR色彩</strong>：UIColor支持SDR基色和曝光值指定</li><li><strong>强类型通知</strong>：NSNotification进化为类型安全的<code>NotificationCenter.Message</code></li></ol><p>重要迁移提示：从iOS 26开始，使用最新SDK构建的UIKit应用必须采用UIScene生命周期。</p><h2 id="SF-Symbols-7的动画增强"><a href="#SF-Symbols-7的动画增强" class="headerlink" title="SF Symbols 7的动画增强"></a>SF Symbols 7的动画增强</h2><p>最新版SF Symbols引入三种新动画模式：</p><ul><li><strong>Draw On/Off</strong>：通过绘制动作显示/隐藏符号</li><li><strong>Variable Draw</strong>：沿路径绘制变量值（如进度指示）</li><li><strong>魔术替换过渡</strong>：特定符号间的特殊绘制动画</li></ul><p>UIButton新增专用API简化集成：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> configuration <span class="operator">=</span> <span class="type">UIButton</span>.<span class="type">Configuration</span>.plain()</span><br><span class="line">configuration.symbolContentTransition <span class="operator">=</span> <span class="type">UISymbolContentTransition</span>(.replace)</span><br></pre></td></tr></table></figure></p><h2 id="总结与行动指南"><a href="#总结与行动指南" class="headerlink" title="总结与行动指南"></a>总结与行动指南</h2><p>要充分利用UIKit新特性，建议采取以下步骤：</p><ol><li>立即使用iOS 26 SDK编译您的应用</li><li>评估应用在新设计系统中的视觉表现</li><li>采用UISplitViewController等标准容器</li><li>重构应用菜单系统以利用新API</li><li>通过updateProperties优化代码结构</li></ol><h2 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h2><ul><li><a href="https://developer.apple.com/videos/play/wwdc2025/356">了解全新设计系统</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2025/284">使用全新设计系统构建UIKit App</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2025/208">提升iPad App设计</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2025/282">让你的UIKit App更加灵活</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2025/337">SF Symbols 7的新功能</a></li></ul><h2 id="文档资源"><a href="#文档资源" class="headerlink" title="文档资源"></a>文档资源</h2><ul><li><a href="https://developer.apple.com/design/human-interface-guidelines">人机界面指南</a></li><li><a href="https://developer.apple.com/documentation/Updates/UIKit">UIKit更新日志</a><blockquote><p>此文章由AI生成，可能存在错误，如有问题，请联系<a href="djs66256@163.com">djs66256@163.com</a></p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;借助 uikit 最新推出的多种 api，对你的 app 进行现代化改造，这些更新包括增强的菜单栏支持、自动观察跟踪、全新 ui 更新方法，以及动画效果改进。我们还将介绍如何在 uikitapp 中包含 swiftui 场景，并探讨 sf symbols、hdr 颜色选择器等内容。&lt;br&gt;
    
    </summary>
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/categories/wwdc2025/"/>
    
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/tags/wwdc2025/"/>
    
      <category term="ios" scheme="http://djs66256.github.io/tags/ios/"/>
    
      <category term="ipados" scheme="http://djs66256.github.io/tags/ipados/"/>
    
      <category term="隐私与安全" scheme="http://djs66256.github.io/tags/%E9%9A%90%E7%A7%81%E4%B8%8E%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>让所有人都能更方便地使用你的 Mac App</title>
    <link href="http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_229/"/>
    <id>http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_229/</id>
    <published>2025-06-10T07:52:37.000Z</published>
    <updated>2025-06-10T07:52:37.584Z</updated>
    
    <content type="html"><![CDATA[<p>了解如何整合那些可充分利用 macos 强大功能和灵活性的辅助功能。深入探索如何支持“旁白”和“语音控制”，如何改进视图的布局，以及辅助技术如何导航你的内容，等等。<br><span id="more"></span></p><p><img src="https://devimages-cdn.apple.com/wwdc-services/images/3055294D-836B-4513-B7B0-0BC5666246B0/9918/9918_wide_250x141_2x.jpg" alt="视频封面"><br><a href="https://developer.apple.com/cn/videos/play/wwdc2025/229/">视频地址</a></p><h1 id="打造无障碍的-macOS-应用：SwiftUI-实践指南"><a href="#打造无障碍的-macOS-应用：SwiftUI-实践指南" class="headerlink" title="打造无障碍的 macOS 应用：SwiftUI 实践指南"></a>打造无障碍的 macOS 应用：SwiftUI 实践指南</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在当今数字时代，构建无障碍应用已成为开发者不可忽视的责任。通过支持旁白、语音控制等辅助技术，我们可以让视力障碍、运动障碍等用户群体也能顺畅使用我们的应用。本文将深入探讨如何利用 SwiftUI 优化 macOS 应用的无障碍体验。</p><h2 id="布局优化策略"><a href="#布局优化策略" class="headerlink" title="布局优化策略"></a>布局优化策略</h2><h3 id="无障碍元素容器化"><a href="#无障碍元素容器化" class="headerlink" title="无障碍元素容器化"></a>无障碍元素容器化</h3><p>SwiftUI 会将构成应用的各个视图自动呈现为无障碍元素。关键在于如何合理组织这些元素，就像视觉上精心设计界面一样。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 视图分组示例</span></span><br><span class="line"><span class="type">VStack</span> &#123;</span><br><span class="line">    <span class="type">FirstView</span>()</span><br><span class="line">    <span class="type">SecondView</span>()</span><br><span class="line">&#125;</span><br><span class="line">.accessibilityElement(children: .contain)</span><br></pre></td></tr></table></figure><p><code>.contain</code> 行为将子视图包含在无障碍容器中，而 <code>.combine</code> 会将子视图合并为一个无障碍元素，<code>.ignore</code> 则会隐藏子视图的无障碍元素。</p><h3 id="调整阅读顺序"><a href="#调整阅读顺序" class="headerlink" title="调整阅读顺序"></a>调整阅读顺序</h3><p>通过 <code>accessibilitySortPriority</code> 修饰符，我们可以优化旁白朗读顺序：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Text</span>(book.title)</span><br><span class="line">    .accessibilitySortPriority(<span class="number">1</span>)  <span class="comment">// 优先朗读书名</span></span><br></pre></td></tr></table></figure><h2 id="导航加速技巧"><a href="#导航加速技巧" class="headerlink" title="导航加速技巧"></a>导航加速技巧</h2><h3 id="旋钮功能实现"><a href="#旋钮功能实现" class="headerlink" title="旋钮功能实现"></a>旋钮功能实现</h3><p>为书签页面添加无障碍旋钮，让旁白用户能快速跳转：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.accessibilityRotor(<span class="string">&quot;Bookmarks&quot;</span>) &#123;</span><br><span class="line">    <span class="type">ForEach</span>(pages) &#123; page <span class="keyword">in</span></span><br><span class="line">        <span class="keyword">if</span> page.isBookmarked &#123;</span><br><span class="line">            <span class="type">AccessibilityRotorEntry</span>(page.title, id: page.id)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="设置默认焦点"><a href="#设置默认焦点" class="headerlink" title="设置默认焦点"></a>设置默认焦点</h3><p>在 macOS 26 中，可以使用无障碍默认焦点修饰符：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.accessibilityDefaultFocus(<span class="variable">$focusedForVoiceOver</span>, <span class="literal">true</span>)</span><br></pre></td></tr></table></figure><h2 id="交互无障碍设计"><a href="#交互无障碍设计" class="headerlink" title="交互无障碍设计"></a>交互无障碍设计</h2><h3 id="替代悬停交互"><a href="#替代悬停交互" class="headerlink" title="替代悬停交互"></a>替代悬停交互</h3><p>对于需要悬停或触控板手势的交互，应提供替代方式：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.accessibilityAction(named: page.isBookmarked <span class="operator">?</span> <span class="string">&quot;移除书签&quot;</span> : <span class="string">&quot;添加书签&quot;</span>) &#123;</span><br><span class="line">    page.isBookmarked.toggle()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="快捷键的重要性"><a href="#快捷键的重要性" class="headerlink" title="快捷键的重要性"></a>快捷键的重要性</h3><p>添加快捷键不仅能提升效率，对无法使用鼠标的用户也至关重要。</p><h2 id="测试与评估"><a href="#测试与评估" class="headerlink" title="测试与评估"></a>测试与评估</h2><p>建议开发者：</p><ol><li>使用旁白测试每个新功能</li><li>优化容器结构，避免过度嵌套</li><li>探索添加自定义旋钮的可能性</li><li>通过无障碍营养标签展示应用特性</li></ol><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>构建无障碍的 macOS 应用不仅是一种责任，更能扩大用户群体。通过 SwiftUI 提供的强大工具，我们可以轻松实现出色的无障碍体验。从优化布局到加速导航，再到改进交互方式，每一步都能让应用更加包容。</p><h2 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h2><ul><li><a href="https://developer.apple.com/videos/play/wwdc2024/10073">了解 SwiftUI 中的辅助功能</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2021/10119">SwiftUI 辅助功能：超越基础功能</a></li></ul><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><ul><li><a href="https://developer.apple.com/documentation/swiftui/view-accessibility">Accessibility</a></li><li><a href="https://developer.apple.com/design/human-interface-guidelines/accessibility">Human Interface Guidelines: Accessibility</a><blockquote><p>此文章由AI生成，可能存在错误，如有问题，请联系<a href="djs66256@163.com">djs66256@163.com</a></p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;了解如何整合那些可充分利用 macos 强大功能和灵活性的辅助功能。深入探索如何支持“旁白”和“语音控制”，如何改进视图的布局，以及辅助技术如何导航你的内容，等等。&lt;br&gt;
    
    </summary>
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/categories/wwdc2025/"/>
    
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/tags/wwdc2025/"/>
    
      <category term="macos" scheme="http://djs66256.github.io/tags/macos/"/>
    
      <category term="辅助功能和包容性" scheme="http://djs66256.github.io/tags/%E8%BE%85%E5%8A%A9%E5%8A%9F%E8%83%BD%E5%92%8C%E5%8C%85%E5%AE%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>针对辅助功能标签评估你的 App</title>
    <link href="http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_224/"/>
    <id>http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_224/</id>
    <published>2025-06-10T07:52:28.000Z</published>
    <updated>2025-06-10T07:52:28.733Z</updated>
    
    <content type="html"><![CDATA[<p>在你的 app store 产品页面上使用辅助功能标签，以突出展示你的 app 支持的辅助功能。你将了解如何评估 app 的辅助功能 (如“旁白”、“更大字体”、“字幕”等)，并选择准确且描述性的辅助功能标签。你还将了解如何在整个设计阶段解决辅助功能问题。<br><span id="more"></span></p><p><img src="https://devimages-cdn.apple.com/wwdc-services/images/3055294D-836B-4513-B7B0-0BC5666246B0/9917/9917_wide_250x141_2x.jpg" alt="视频封面"><br><a href="https://developer.apple.com/cn/videos/play/wwdc2025/224/">视频地址</a></p><h1 id="为应用评估辅助功能标签：让科技惠及每个人"><a href="#为应用评估辅助功能标签：让科技惠及每个人" class="headerlink" title="为应用评估辅助功能标签：让科技惠及每个人"></a>为应用评估辅助功能标签：让科技惠及每个人</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在App Store上，辅助功能标签就像应用的无障碍”营养标签”，帮助用户了解应用是否满足他们的特殊需求。本文将带你系统评估应用的辅助功能支持情况，从设计原则到具体测试方法，教你如何准确标注这些关键信息。  </p><h2 id="认识辅助功能营养标签"><a href="#认识辅助功能营养标签" class="headerlink" title="认识辅助功能营养标签"></a>认识辅助功能营养标签</h2><p>辅助功能营养标签是App Store展示应用无障碍特性的标准化方式。要正确标注：  </p><ol><li><strong>明确核心任务</strong>：用户下载应用的主要目的（如登录、购买等）  </li><li><strong>全流程测试</strong>：用每项辅助功能验证所有核心任务  </li><li><strong>多设备覆盖</strong>：包括iPhone、iPad、Mac等平台  </li><li><strong>如实标注</strong>：仅声明完全支持的功能，无关功能不必标注  </li></ol><blockquote><p>“没有我们的参与，就不要做关于我们的决定”——这是残障社群的核心信条。  </p></blockquote><h2 id="功能评估实战（以地标应用Landmarks为例）"><a href="#功能评估实战（以地标应用Landmarks为例）" class="headerlink" title="功能评估实战（以地标应用Landmarks为例）"></a>功能评估实战（以地标应用Landmarks为例）</h2><h3 id="视觉相关功能"><a href="#视觉相关功能" class="headerlink" title="视觉相关功能"></a>视觉相关功能</h3><ul><li><p><strong>色彩对比</strong>  </p><ul><li>要求：前景/背景色有足够对比度（含深色模式）  </li><li>案例：专门设计高对比配色，但需适配”增强对比度”设置  </li></ul></li><li><p><strong>深色模式</strong>  </p><ul><li>验证智能反转颜色下的表现  </li></ul></li><li><p><strong>大字号支持</strong>  </p><ul><li>最低要求：支持200%放大（理想情况更大）  </li><li>问题发现：集合描述截断，文本框未动态扩展→暂不标注  </li></ul></li></ul><h3 id="交互设计原则"><a href="#交互设计原则" class="headerlink" title="交互设计原则"></a>交互设计原则</h3><ul><li><p><strong>非色彩区分</strong>  </p><ul><li>禁止仅用颜色传达状态（如红/绿），需结合图标/文本  </li><li>解决方案：为删除按钮等添加彩色图标  </li></ul></li><li><p><strong>减弱动态效果</strong>  </p><ul><li>移除可能引发眩晕的动画/转场  </li></ul></li></ul><h3 id="辅助技术支持"><a href="#辅助技术支持" class="headerlink" title="辅助技术支持"></a>辅助技术支持</h3><ul><li><p><strong>语音控制</strong>  </p><ul><li>关键：为所有可操作元素添加<code>accessibilityLabel</code>  </li><li>测试：用纯语音命令完成核心流程  </li></ul></li><li><p><strong>旁白（VoiceOver）</strong>  </p><ul><li>与视障用户共同测试导航结构  </li><li>优化点：集合编辑界面的交互流程  </li></ul></li></ul><h3 id="媒体内容"><a href="#媒体内容" class="headerlink" title="媒体内容"></a>媒体内容</h3><ul><li>无视频/音频内容的应用无需标注字幕/音频描述支持  </li></ul><h2 id="标注与发布"><a href="#标注与发布" class="headerlink" title="标注与发布"></a>标注与发布</h2><p>在App Store Connect中：  </p><ol><li>勾选已验证支持的功能（如深色模式、语音控制）  </li><li>暂不标注未达标功能（如大字号）  </li><li>关联详细说明页面  </li></ol><p>Landmarks最终标注支持：<br>✅ 色彩对比 ✅ 深色模式 ✅ 非色彩区分<br>✅ 减弱动态效果 ✅ 语音控制 ✅ 旁白  </p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>真正的无障碍设计需要：  </p><ul><li><strong>早期规划</strong>：从设计阶段考虑不同能力用户需求  </li><li><strong>真实测试</strong>：邀请残障用户直接参与验证  </li><li><strong>持续优化</strong>：通过营养标签透明展示进展  </li></ul><h2 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h2><ul><li><a href="https://developer.apple.com/videos/play/wwdc2024/10074">动态字体体验入门</a>  </li></ul><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><ul><li><a href="https://developer.apple.com/documentation/swiftui/view-accessibility">SwiftUI无障碍支持</a>  </li><li><a href="https://developer.apple.com/design/human-interface-guidelines/accessibility">人机界面指南：无障碍</a>  </li><li><a href="https://developer.apple.com/help/app-store-connect/manage-app-accessibility/overview-of-accessibility-nutrition-labels">辅助功能营养标签概述</a><blockquote><p>此文章由AI生成，可能存在错误，如有问题，请联系<a href="djs66256@163.com">djs66256@163.com</a></p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在你的 app store 产品页面上使用辅助功能标签，以突出展示你的 app 支持的辅助功能。你将了解如何评估 app 的辅助功能 (如“旁白”、“更大字体”、“字幕”等)，并选择准确且描述性的辅助功能标签。你还将了解如何在整个设计阶段解决辅助功能问题。&lt;br&gt;
    
    </summary>
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/categories/wwdc2025/"/>
    
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/tags/wwdc2025/"/>
    
      <category term="ios" scheme="http://djs66256.github.io/tags/ios/"/>
    
      <category term="ipados" scheme="http://djs66256.github.io/tags/ipados/"/>
    
      <category term="macos" scheme="http://djs66256.github.io/tags/macos/"/>
    
      <category term="tvos" scheme="http://djs66256.github.io/tags/tvos/"/>
    
      <category term="visionos" scheme="http://djs66256.github.io/tags/visionos/"/>
    
      <category term="watchos" scheme="http://djs66256.github.io/tags/watchos/"/>
    
      <category term="辅助功能和包容性" scheme="http://djs66256.github.io/tags/%E8%BE%85%E5%8A%A9%E5%8A%9F%E8%83%BD%E5%92%8C%E5%8C%85%E5%AE%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>针对 visionOS 优化你的自定环境</title>
    <link href="http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_305/"/>
    <id>http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_305/</id>
    <published>2025-06-10T07:52:15.000Z</published>
    <updated>2025-06-10T07:52:15.138Z</updated>
    
    <content type="html"><![CDATA[<p>探索如何使用程序化工具为你的 visionos app 或游戏创建精美的沉浸式环境。我们将分享创建高质量环境的构建要素，然后深入探讨优化流程。了解如何使用 apple 针对 houdini 提供的一整套流程，减少场景的多边形数量、进行几何清理、打包 uv 贴图，并创建 usd 素材以便导入到 reality composer pro 或你选择的游戏引擎中。<br><span id="more"></span></p><p><img src="https://devimages-cdn.apple.com/wwdc-services/images/3055294D-836B-4513-B7B0-0BC5666246B0/9960/9960_wide_250x141_2x.jpg" alt="视频封面"><br><a href="https://developer.apple.com/cn/videos/play/wwdc2025/305/">视频地址</a></p><h1 id="为-visionOS-优化-3D-环境的完整工作流解析"><a href="#为-visionOS-优化-3D-环境的完整工作流解析" class="headerlink" title="为 visionOS 优化 3D 环境的完整工作流解析"></a>为 visionOS 优化 3D 环境的完整工作流解析</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在 Apple Vision Pro 平台上打造沉浸式环境时，开发者面临一个关键挑战：如何在保持电影级视觉效果的同时满足实时渲染的性能要求？本文将深入解析一套完整的程序化优化工作流，从几何精简到纹理烘焙，助你突破技术限制，创造惊艳的 visionOS 体验。</p><h2 id="沉浸式环境的独特挑战"><a href="#沉浸式环境的独特挑战" class="headerlink" title="沉浸式环境的独特挑战"></a>沉浸式环境的独特挑战</h2><p>Vision Pro 的全沉浸模式需要渲染每个像素，这对性能提出了极高要求。关键在于利用”沉浸边界”概念——用户可移动的固定空间范围（通常数米）。通过精准定位用户视线和移动范围，开发者可以：</p><ul><li>仅对关键区域保持全精度渲染</li><li>采用梯度式优化策略</li><li>实现艺术表现与技术约束的完美平衡</li></ul><h2 id="几何优化三重奏"><a href="#几何优化三重奏" class="headerlink" title="几何优化三重奏"></a>几何优化三重奏</h2><h3 id="1-自适应多边形精简"><a href="#1-自适应多边形精简" class="headerlink" title="1. 自适应多边形精简"></a>1. 自适应多边形精简</h3><p>通过 Houdini 的 Adaptive Reduce HDA 工具：</p><ul><li>基于观测点对每个三角形智能优化</li><li>热力图可视化显示密度分布（红=高密度，蓝=简化区）</li><li>保留边缘轮廓的同时减少总三角形数<br>案例效果：部分岩石模型精简后保持锐利边缘，而远景自动降低细节</li></ul><h3 id="2-几何体广告牌技术"><a href="#2-几何体广告牌技术" class="headerlink" title="2. 几何体广告牌技术"></a>2. 几何体广告牌技术</h3><p>针对1-3公里外的对象：</p><ul><li>使用 Vista Billboard HDA 生成简化网格</li><li>远距深度感知极限允许用平面图像替代3D几何</li><li>月球场景中使多边形从数百万骤降至数千</li></ul><h3 id="3-遮挡剔除优化"><a href="#3-遮挡剔除优化" class="headerlink" title="3. 遮挡剔除优化"></a>3. 遮挡剔除优化</h3><p>两步高效剔除方案：</p><ol><li>背向面剔除：移除始终不可见的背面多边形</li><li>全遮挡剔除：通过射线投射检测隐藏几何<br>实际效果：月球场景共移除17万三角形，最终降至18万</li></ol><h2 id="UV与纹理的智能压缩"><a href="#UV与纹理的智能压缩" class="headerlink" title="UV与纹理的智能压缩"></a>UV与纹理的智能压缩</h2><h3 id="多角度投影UV布局"><a href="#多角度投影UV布局" class="headerlink" title="多角度投影UV布局"></a>多角度投影UV布局</h3><p>突破单视角局限：</p><ul><li>Mesh Partition HDA 分割最小可见单元</li><li>Multi-Projection HDA 从最佳观测点投射UV</li><li>边界内使用面积缩放，边界外采用屏幕空间缩放<br>成果：数公里地形压缩至两张纹理贴图</li></ul><h3 id="高模到低模烘焙"><a href="#高模到低模烘焙" class="headerlink" title="高模到低模烘焙"></a>高模到低模烘焙</h3><p>创新合成技术：</p><ul><li>球面投影映射结合直接表面投影</li><li>确保预渲染细节完整转移到优化UV</li><li>纹理内存从数十GB压缩至不足200MB</li></ul><h2 id="USD场景配置技巧"><a href="#USD场景配置技巧" class="headerlink" title="USD场景配置技巧"></a>USD场景配置技巧</h2><p>最终优化阶段：</p><ul><li>Boundary Partition HDA 处理边界内密集几何</li><li>Frustum Partition HDA 渐进分块边界外网格</li><li>属性传递实现高效视锥剔除<br>性能数据：单帧绘制调用通常少于100次</li></ul><h2 id="实战成果"><a href="#实战成果" class="headerlink" title="实战成果"></a>实战成果</h2><p>月球场景优化对比：</p><ul><li>多边形：1亿 → 20万（视锥剔除后单屏约10万）</li><li>纹理内存：数十GB → 250MB</li><li>实体数量：控制在200以内</li></ul><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>这套Houdini工具链展示了程序化工作流的强大之处——通过智能算法而非手工劳动，开发者可以在保持视觉质量的同时突破性能瓶颈。随附的14个HDA工具已开放下载，为各种沉浸式场景提供了灵活解决方案。正如早期游戏开发者用创意突破硬件限制，现在你也可以用这些工具重新定义visionOS的体验边界。</p><h2 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h2><ul><li><a href="https://developer.apple.com/videos/play/wwdc2024/10087">为你的沉浸式 visionOS App 创建自定环境</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2024/10186">为空间计算优化 3D 素材资源</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2024/10115">在自定环境中提升媒体观赏体验的沉浸度</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2023/10086">探索 USD 生态系统</a><blockquote><p>此文章由AI生成，可能存在错误，如有问题，请联系<a href="djs66256@163.com">djs66256@163.com</a></p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;探索如何使用程序化工具为你的 visionos app 或游戏创建精美的沉浸式环境。我们将分享创建高质量环境的构建要素，然后深入探讨优化流程。了解如何使用 apple 针对 houdini 提供的一整套流程，减少场景的多边形数量、进行几何清理、打包 uv 贴图，并创建 usd 素材以便导入到 reality composer pro 或你选择的游戏引擎中。&lt;br&gt;
    
    </summary>
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/categories/wwdc2025/"/>
    
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/tags/wwdc2025/"/>
    
      <category term="macos" scheme="http://djs66256.github.io/tags/macos/"/>
    
      <category term="visionos" scheme="http://djs66256.github.io/tags/visionos/"/>
    
      <category term="设计" scheme="http://djs66256.github.io/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>针对辅助访问自定 App</title>
    <link href="http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_238/"/>
    <id>http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_238/</id>
    <published>2025-06-10T07:52:12.000Z</published>
    <updated>2025-06-10T07:52:12.792Z</updated>
    
    <content type="html"><![CDATA[<p>辅助访问是一种独具特色、突出重点的 ios 体验，让有认知障碍的用户可以更轻松地独立使用 iphone 和 ipad。在 ios 和 ipados 26 中，你可以对 app 在辅助访问模式下的运行效果进行自定，为用户提供更大的便利性和独立性。了解如何使用 assistiveaccess swiftui 场景类型来定制你的 app，并探索可以帮助你为每一个人打造高质量辅助触控体验的关键设计原则。<br><span id="more"></span></p><p><img src="https://devimages-cdn.apple.com/wwdc-services/images/3055294D-836B-4513-B7B0-0BC5666246B0/9919/9919_wide_250x141_2x.jpg" alt="视频封面"><br><a href="https://developer.apple.com/cn/videos/play/wwdc2025/238/">视频地址</a></p><h1 id="为认知障碍用户优化应用体验：辅助访问功能详解"><a href="#为认知障碍用户优化应用体验：辅助访问功能详解" class="headerlink" title="为认知障碍用户优化应用体验：辅助访问功能详解"></a>为认知障碍用户优化应用体验：辅助访问功能详解</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>辅助访问（Assistive Access）是苹果为认知障碍用户量身打造的特殊模式，它能简化iOS和iPadOS的交互方式，让这些用户也能独立使用设备。本文将详细介绍如何通过SwiftUI为您的应用添加辅助访问支持，以及优化用户体验的关键设计原则。</p><h2 id="什么是辅助访问？"><a href="#什么是辅助访问？" class="headerlink" title="什么是辅助访问？"></a>什么是辅助访问？</h2><p>辅助访问是iOS/iPadOS 17引入的一项无障碍功能，它通过以下方式降低用户认知负荷：</p><ul><li><strong>超大控件设计</strong>：让所有操作元素更易于识别和点击</li><li><strong>精简界面</strong>：去除不必要的功能和视觉干扰</li><li><strong>视觉化替代文本</strong>：用图形辅助理解</li></ul><h3 id="全屏模式支持"><a href="#全屏模式支持" class="headerlink" title="全屏模式支持"></a>全屏模式支持</h3><p>对于已经为认知障碍用户优化的应用（如辅助沟通应用），可以通过在Info.plist中设置<code>UISupportsFullScreenInAssistiveAccess</code>来启用全屏显示。开发者还可以使用SwiftUI或UIKit API来检测当前是否处于辅助访问模式。</p><h2 id="实现辅助访问场景"><a href="#实现辅助访问场景" class="headerlink" title="实现辅助访问场景"></a>实现辅助访问场景</h2><p>在iOS/iPadOS 26中，未专门优化的应用可以通过创建辅助访问场景来提供定制体验。与全屏模式不同，场景模式会自动采用系统标准的醒目控件风格。</p><h3 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h3><ol><li>在Info.plist中添加<code>UISupportsAssistiveAccess</code>键并设为true</li><li>使用SwiftUI添加场景声明：</li></ol><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@main</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">MyApp</span>: <span class="title class_ inherited__">App</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> body: <span class="keyword">some</span> <span class="type">Scene</span> &#123;</span><br><span class="line">    <span class="type">WindowGroup</span> &#123;</span><br><span class="line">      <span class="type">MainContentView</span>()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">AssistiveAccess</span> &#123;  <span class="comment">// 辅助访问场景</span></span><br><span class="line">      <span class="type">SimplifiedView</span>()  </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>使用<code>.assistiveAccess</code>预览特性测试布局</li></ol><p>对于UIKit应用，可以通过场景代理桥接到SwiftUI场景：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MySceneDelegate</span>: <span class="title class_ inherited__">UIHostingSceneDelegate</span> &#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">var</span> rootScene: <span class="keyword">some</span> <span class="type">Scene</span> &#123;</span><br><span class="line">    <span class="type">AssistiveAccess</span> &#123; <span class="type">SimplifiedView</span>() &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="设计优化原则"><a href="#设计优化原则" class="headerlink" title="设计优化原则"></a>设计优化原则</h2><p>为辅助访问设计时需要遵循以下核心原则：</p><ol><li><p><strong>功能聚焦</strong><br>保留1-2个核心功能，移除非必要功能</p></li><li><p><strong>交互简化</strong>  </p></li></ol><ul><li>减少同时显示的选项</li><li>避免复杂手势和嵌套UI</li><li>禁用自动超时交互</li><li>采用分步引导流程</li></ul><ol start="3"><li><strong>安全设计</strong>  </li></ol><ul><li>移除不可逆操作</li><li>高风险操作需要双重确认</li></ul><ol start="4"><li><strong>多模态呈现</strong>  </li></ol><ul><li>控件同时包含图标和文字</li><li>使用系统提供的导航栏图标修饰符：</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.navigationTitle(<span class="string">&quot;绘图&quot;</span>)</span><br><span class="line">.assistiveAccessNavigationIcon(systemImage: <span class="string">&quot;paintbrush.fill&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="实际应用案例"><a href="#实际应用案例" class="headerlink" title="实际应用案例"></a>实际应用案例</h2><p>以一个绘图应用为例，优化颜色选择功能：</p><ul><li>将复杂取色器简化为6种预选颜色</li><li>将颜色选择作为独立步骤</li><li>移除”撤销”功能避免混淆</li></ul><h2 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h2><ul><li><a href="https://developer.apple.com/videos/play/wwdc2025/256">SwiftUI的新功能</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2023/10032">了解Assistive Access</a></li></ul><h2 id="文档资源"><a href="#文档资源" class="headerlink" title="文档资源"></a>文档资源</h2><ul><li><a href="https://developer.apple.com/documentation/SwiftUI/AssistiveAccess">AssistiveAccess文档</a></li><li><a href="https://developer.apple.com/design/human-interface-guidelines/accessibility">人机界面指南：无障碍功能</a></li><li><a href="https://developer.apple.com/documentation/BundleResources/Information-Property-List/UISupportsFullScreenInAssistiveAccess">UISupportsFullScreenInAssistiveAccess</a><blockquote><p>此文章由AI生成，可能存在错误，如有问题，请联系<a href="djs66256@163.com">djs66256@163.com</a></p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;辅助访问是一种独具特色、突出重点的 ios 体验，让有认知障碍的用户可以更轻松地独立使用 iphone 和 ipad。在 ios 和 ipados 26 中，你可以对 app 在辅助访问模式下的运行效果进行自定，为用户提供更大的便利性和独立性。了解如何使用 assistiveaccess swiftui 场景类型来定制你的 app，并探索可以帮助你为每一个人打造高质量辅助触控体验的关键设计原则。&lt;br&gt;
    
    </summary>
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/categories/wwdc2025/"/>
    
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/tags/wwdc2025/"/>
    
      <category term="ios" scheme="http://djs66256.github.io/tags/ios/"/>
    
      <category term="ipados" scheme="http://djs66256.github.io/tags/ipados/"/>
    
      <category term="辅助功能和包容性" scheme="http://djs66256.github.io/tags/%E8%BE%85%E5%8A%A9%E5%8A%9F%E8%83%BD%E5%92%8C%E5%8C%85%E5%AE%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>包容性 App 设计的原则</title>
    <link href="http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_316/"/>
    <id>http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_316/</id>
    <published>2025-06-10T07:52:01.000Z</published>
    <updated>2025-06-10T07:52:01.611Z</updated>
    
    <content type="html"><![CDATA[<p>探索了解残障人士的需求如何有助于你打造出人人都能方便使用的更出色 app。了解如何通过支持多种类型的交互、提供自定功能以及采用各种辅助功能 api，让你的 app 更具包容性。<br><span id="more"></span></p><p><img src="https://devimages-cdn.apple.com/wwdc-services/images/3055294D-836B-4513-B7B0-0BC5666246B0/9961/9961_wide_250x141_2x.jpg" alt="视频封面"><br><a href="https://developer.apple.com/cn/videos/play/wwdc2025/316/">视频地址</a></p><h1 id="构建包容性应用：从残障视角出发的设计实践"><a href="#构建包容性应用：从残障视角出发的设计实践" class="headerlink" title="构建包容性应用：从残障视角出发的设计实践"></a>构建包容性应用：从残障视角出发的设计实践</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在数字时代，应用设计不应仅服务于”标准用户”。全球约七分之一人群存在不同形式的残障，而每个人在生命不同阶段都可能面临暂时性或永久性的能力局限。本文将从专业视角，为您拆解如何通过四项核心策略（多感官交互、自定义选项、辅助API、债务追踪）打造真正包容的应用程序。</p><h2 id="理解残障的连续性"><a href="#理解残障的连续性" class="headerlink" title="理解残障的连续性"></a>理解残障的连续性</h2><p>残障不是非此即彼的二元状态，而是存在于连续谱系中。以视力为例：</p><ul><li>法定失明者可能保留色彩感知能力</li><li>黄斑变性患者可能仅中央视力模糊</li><li>弱光环境下任何人都可能面临视觉挑战</li></ul><p>这种连续性的认知，将彻底改变您的设计思路。</p><h2 id="四大设计策略精解"><a href="#四大设计策略精解" class="headerlink" title="四大设计策略精解"></a>四大设计策略精解</h2><h3 id="1-多感官交互设计"><a href="#1-多感官交互设计" class="headerlink" title="1. 多感官交互设计"></a>1. 多感官交互设计</h3><p>关键原则：信息应通过多通道冗余传递</p><ul><li>视觉通道：为音频内容添加字幕（服务于听障用户/静音场景）</li><li>听觉通道：为视觉内容提供语音描述（服务于视障用户/多任务场景）</li><li>触觉反馈：增强操作确认（如振动提示）</li></ul><p>典型案例：Crouton食谱应用的”免提模式”通过语音交互解放用户双手</p><h3 id="2-深度自定义体系"><a href="#2-深度自定义体系" class="headerlink" title="2. 深度自定义体系"></a>2. 深度自定义体系</h3><p>构建灵活的UI调整层：</p><ul><li>文本可调：字号、字距、行高、字体（特别推荐旧金山字体）</li><li>色彩方案：高对比度模式、色盲优化配色</li><li>布局选择：从信息密集到极简视图（参考Carrot Weather）</li></ul><p>设计箴言：”应用适应用户，而非用户适应应用”</p><h3 id="3-辅助API整合"><a href="#3-辅助API整合" class="headerlink" title="3. 辅助API整合"></a>3. 辅助API整合</h3><p>必须集成的三大基础API：</p><ul><li>VoiceOver：屏幕阅读器兼容性测试</li><li>Switch Control：替代触控的交互支持</li><li>Dynamic Type：系统级文字缩放适配</li></ul><p>游戏案例：Blackbox通过VoiceOver+触觉反馈让视障玩家享受解谜乐趣</p><h3 id="4-包容性债务管理"><a href="#4-包容性债务管理" class="headerlink" title="4. 包容性债务管理"></a>4. 包容性债务管理</h3><p>建立迭代优化机制：</p><ul><li>定期进行辅助功能审计</li><li>建立残障用户测试小组</li><li>制定渐进式改进路线图</li></ul><p>技术债务类比：将未解决的包容性问题视为需要偿还的”债务”</p><h2 id="实践工具与资源"><a href="#实践工具与资源" class="headerlink" title="实践工具与资源"></a>实践工具与资源</h2><p>立即行动的三步曲：</p><ol><li>启用Xcode辅助功能检查器</li><li>体验VoiceOver的开发者模式</li><li>参考App Store新推出的无障碍特性展示规范</li></ol><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>包容性设计不是额外负担，而是创新催化剂。从路缘坡道到语音助手，历史上许多全民性创新都源于残障需求。当您下次设计功能时，不妨自问：”这个交互方式，能否覆盖更广泛的能力谱系？” 答案或许就是下一个突破性创新的起点。</p><h2 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h2><ul><li><a href="https://developer.apple.com/videos/play/wwdc2025/224">针对辅助功能标签评估你的 App</a>  </li><li><a href="https://developer.apple.com/videos/play/wwdc2021/10275">包容性设计实践</a>  </li><li><a href="https://developer.apple.com/videos/play/wwdc2021/10304">包容性设计过程</a>  </li></ul><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><ul><li><a href="https://developer.apple.com/design/human-interface-guidelines/accessibility">人机界面指南：辅助功能</a>  </li><li><a href="https://developer.apple.com/design/human-interface-guidelines/inclusion/">人机界面指南：包容性</a><blockquote><p>此文章由AI生成，可能存在错误，如有问题，请联系<a href="djs66256@163.com">djs66256@163.com</a></p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;探索了解残障人士的需求如何有助于你打造出人人都能方便使用的更出色 app。了解如何通过支持多种类型的交互、提供自定功能以及采用各种辅助功能 api，让你的 app 更具包容性。&lt;br&gt;
    
    </summary>
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/categories/wwdc2025/"/>
    
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/tags/wwdc2025/"/>
    
      <category term="ios" scheme="http://djs66256.github.io/tags/ios/"/>
    
      <category term="ipados" scheme="http://djs66256.github.io/tags/ipados/"/>
    
      <category term="macos" scheme="http://djs66256.github.io/tags/macos/"/>
    
      <category term="tvos" scheme="http://djs66256.github.io/tags/tvos/"/>
    
      <category term="visionos" scheme="http://djs66256.github.io/tags/visionos/"/>
    
      <category term="watchos" scheme="http://djs66256.github.io/tags/watchos/"/>
    
      <category term="辅助功能和包容性" scheme="http://djs66256.github.io/tags/%E8%BE%85%E5%8A%A9%E5%8A%9F%E8%83%BD%E5%92%8C%E5%8C%85%E5%AE%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>借助 SwiftUI 在 visionOS 中设置场景</title>
    <link href="http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_290/"/>
    <id>http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_290/</id>
    <published>2025-06-10T07:50:59.000Z</published>
    <updated>2025-06-10T07:50:59.798Z</updated>
    
    <content type="html"><![CDATA[<p>探索精彩的全新 api，为你的 visionos app 打造更出色的窗口、空间容器和沉浸式空间。微调场景在重新启动或固定位置时的行为。通过裁剪边缘和对齐，根据周边环境来调整空间容器。将流媒体格式的沉浸式内容从 mac 传输到 apple vision pro。借助空间容器和沉浸式空间，让基于 uikit 的现有 app 更上一层楼。<br><span id="more"></span></p><p><img src="https://devimages-cdn.apple.com/wwdc-services/images/3055294D-836B-4513-B7B0-0BC5666246B0/9991/9991_wide_250x141_2x.jpg" alt="视频封面"><br><a href="https://developer.apple.com/cn/videos/play/wwdc2025/290/">视频地址</a></p><h1 id="探索-visionOS-26-全新场景-API：打造沉浸式空间体验"><a href="#探索-visionOS-26-全新场景-API：打造沉浸式空间体验" class="headerlink" title="探索 visionOS 26 全新场景 API：打造沉浸式空间体验"></a>探索 visionOS 26 全新场景 API：打造沉浸式空间体验</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>随着 visionOS 26 的发布，Apple 为开发者带来了全新的场景构建能力。无论是窗口、空间容器还是沉浸式空间，现在都能通过创新的 API 实现更精细的控制和更自然的交互体验。本文将深入解析这些新特性，助你为 Apple Vision Pro 打造更出色的应用。</p><h2 id="场景生命周期管理"><a href="#场景生命周期管理" class="headerlink" title="场景生命周期管理"></a>场景生命周期管理</h2><h3 id="恢复与锁定功能"><a href="#恢复与锁定功能" class="headerlink" title="恢复与锁定功能"></a>恢复与锁定功能</h3><p>visionOS 26 引入了场景恢复功能，用户可以将窗口或空间容器锁定到特定物理位置。当用户返回该空间时，系统会自动恢复所有锁定内容。</p><p>对于需要禁用恢复的场景（如临时窗口），SwiftUI 开发者可以使用：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">WindowGroup</span>(<span class="string">&quot;Tools&quot;</span>) &#123;</span><br><span class="line">    <span class="type">ToolView</span>()</span><br><span class="line">&#125;</span><br><span class="line">.restorationBehavior(.disabled)</span><br></pre></td></tr></table></figure></p><p>UIKit 开发者则可通过 <code>destructionConditions</code> API 实现相同效果。</p><h3 id="动态启动控制"><a href="#动态启动控制" class="headerlink" title="动态启动控制"></a>动态启动控制</h3><p>visionOS 26 允许开发者根据应用状态动态控制启动场景：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">WindowGroup</span>(<span class="string">&quot;Welcome&quot;</span>, id: <span class="string">&quot;welcome&quot;</span>) &#123;</span><br><span class="line">    <span class="type">WelcomeView</span>()</span><br><span class="line">&#125;</span><br><span class="line">.defaultLaunchBehavior(isFirstLaunch <span class="operator">?</span> .presented : .automatic)</span><br></pre></td></tr></table></figure></p><h2 id="空间容器增强功能"><a href="#空间容器增强功能" class="headerlink" title="空间容器增强功能"></a>空间容器增强功能</h2><h3 id="表面吸附技术"><a href="#表面吸附技术" class="headerlink" title="表面吸附技术"></a>表面吸附技术</h3><p>现在用户可以将窗口吸附到墙面或桌面等物理表面。开发者可以通过 <code>SurfaceSnappingInfo</code> API 获取吸附状态：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Environment</span>(\.surfaceSnappingInfo) <span class="keyword">private</span> <span class="keyword">var</span> snappingInfo</span><br><span class="line"></span><br><span class="line"><span class="type">RealityView</span>()</span><br><span class="line">.onChange(of: snappingInfo) &#123;</span><br><span class="line">    <span class="keyword">if</span> snappingInfo.isSnapped &#123;</span><br><span class="line">        <span class="comment">// 处理吸附状态</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="边缘裁剪支持"><a href="#边缘裁剪支持" class="headerlink" title="边缘裁剪支持"></a>边缘裁剪支持</h3><p>新增的裁剪边距功能允许内容超出场景边界显示：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.preferredWindowClippingMargins(.bottom, maxWaterfallHeight <span class="operator">*</span> pointsPerMeter)</span><br></pre></td></tr></table></figure></p><h2 id="沉浸式空间创新"><a href="#沉浸式空间创新" class="headerlink" title="沉浸式空间创新"></a>沉浸式空间创新</h2><h3 id="重定位事件处理"><a href="#重定位事件处理" class="headerlink" title="重定位事件处理"></a>重定位事件处理</h3><p>当用户重新定位虚拟环境时，可以通过回调更新内容位置：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">RealityView</span>()</span><br><span class="line">.onWorldRecenter &#123; recomputePositions() &#125;</span><br></pre></td></tr></table></figure></p><h3 id="远程沉浸空间"><a href="#远程沉浸空间" class="headerlink" title="远程沉浸空间"></a>远程沉浸空间</h3><p>macOS 应用现在可以流式传输沉浸式内容到 Vision Pro：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">RemoteImmersiveSpace</span>(id: <span class="string">&quot;preview&quot;</span>) &#123;</span><br><span class="line">    <span class="type">CompositorLayer</span>(configuration: config)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="场景桥接技术"><a href="#场景桥接技术" class="headerlink" title="场景桥接技术"></a>场景桥接技术</h2><p>UIKit 应用现在可以无缝集成 SwiftUI 的空间体验：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyHostingSceneDelegate</span>: <span class="title class_ inherited__">NSObject</span>, <span class="title class_ inherited__">UIHostingSceneDelegate</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">var</span> rootScene: <span class="keyword">some</span> <span class="type">Scene</span> &#123;</span><br><span class="line">        <span class="type">WindowGroup</span>(id: <span class="string">&quot;volume&quot;</span>) &#123;</span><br><span class="line">            <span class="type">ContentView</span>()</span><br><span class="line">        &#125;</span><br><span class="line">        .windowStyle(.volumetric)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>visionOS 26 的场景 API 为开发者提供了前所未有的控制力和灵活性。无论是优化现有应用还是创造全新体验，这些工具都能帮助你打造更加自然、沉浸的虚拟现实应用。</p><p>立即开始探索这些新功能，为你的用户带来令人惊叹的空间体验吧！</p><h2 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h2><ul><li><a href="https://developer.apple.com/videos/play/wwdc2025/278">小组件的新功能</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2025/274">搭配使用更出色：SwiftUI 和 RealityKit</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2025/294">用于打造沉浸式 App 的 Metal 渲染的新功能</a></li></ul><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><ul><li><a href="https://developer.apple.com/documentation/visionOS/adopting-best-practices-for-scene-restoration">Adopting best practices for persistent UI</a><blockquote><p>此文章由AI生成，可能存在错误，如有问题，请联系<a href="djs66256@163.com">djs66256@163.com</a></p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;探索精彩的全新 api，为你的 visionos app 打造更出色的窗口、空间容器和沉浸式空间。微调场景在重新启动或固定位置时的行为。通过裁剪边缘和对齐，根据周边环境来调整空间容器。将流媒体格式的沉浸式内容从 mac 传输到 apple vision pro。借助空间容器和沉浸式空间，让基于 uikit 的现有 app 更上一层楼。&lt;br&gt;
    
    </summary>
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/categories/wwdc2025/"/>
    
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/tags/wwdc2025/"/>
    
      <category term="visionos" scheme="http://djs66256.github.io/tags/visionos/"/>
    
      <category term="设计" scheme="http://djs66256.github.io/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>探索设备端基础模型的提示设计和安全</title>
    <link href="http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_248/"/>
    <id>http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_248/</id>
    <published>2025-06-10T07:50:53.000Z</published>
    <updated>2025-06-10T07:50:53.476Z</updated>
    
    <content type="html"><![CDATA[<p>设计充分发挥 foundation models 框架优势的生成式 ai 体验。首先我们将展示如何为 apple 智能核心的设备端大语言模型设计提示。然后，我们将介绍 ai 安全方面的关键理念，并提供切实可行的具体策略来助你打造安全、可靠且令人愉悦的生成式 ai 功能。<br><span id="more"></span></p><p><img src="https://devimages-cdn.apple.com/wwdc-services/images/3055294D-836B-4513-B7B0-0BC5666246B0/10049/10049_wide_250x141_2x.jpg" alt="视频封面"><br><a href="https://developer.apple.com/cn/videos/play/wwdc2025/248/">视频地址</a></p><h1 id="设备端基础模型实战：提示设计与安全防护指南"><a href="#设备端基础模型实战：提示设计与安全防护指南" class="headerlink" title="设备端基础模型实战：提示设计与安全防护指南"></a>设备端基础模型实战：提示设计与安全防护指南</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>随着Apple智能核心的设备端大语言模型(LLM)推出，开发者迎来构建生成式AI功能的新机遇。本文将深入解析两大核心议题：如何通过专业提示设计充分发挥30亿参数设备端模型的潜力，以及构建符合AI安全标准的应用实践。无论您是应用设计师还是工程师，这份指南都将成为您的实战手册。</p><h2 id="设备端LLM特性与设计策略"><a href="#设备端LLM特性与设计策略" class="headerlink" title="设备端LLM特性与设计策略"></a>设备端LLM特性与设计策略</h2><h3 id="模型能力边界解析"><a href="#模型能力边界解析" class="headerlink" title="模型能力边界解析"></a>模型能力边界解析</h3><p>Apple设备端LLM作为30亿参数的优化模型，具有以下典型特征：  </p><ul><li><strong>优势领域</strong>：文本摘要、内容分类、多轮对话、创作修订  </li><li><strong>能力局限</strong>：  <ul><li>复杂任务需拆解为分步提示  </li><li>数学计算可靠性低于传统代码  </li><li>未针对代码生成专项优化  </li><li>知识截止日期后的事件不可知  </li></ul></li></ul><h3 id="引导生成技术"><a href="#引导生成技术" class="headerlink" title="引导生成技术"></a>引导生成技术</h3><p>通过基础模型框架的Guided Generation功能，开发者可以：  </p><ul><li>精确控制输出格式（字符串/数字/数组）  </li><li>定义自定义数据结构  </li><li>降低模型”幻觉”风险  </li></ul><h2 id="提示工程最佳实践"><a href="#提示工程最佳实践" class="headerlink" title="提示工程最佳实践"></a>提示工程最佳实践</h2><h3 id="核心技巧四要素"><a href="#核心技巧四要素" class="headerlink" title="核心技巧四要素"></a>核心技巧四要素</h3><ol><li><p><strong>内容量控制</strong>  </p><ul><li>限定句式：”用三句话总结”  </li><li>扩展指令：”详细描述其特征”  </li></ul></li><li><p><strong>风格角色设定</strong>  </p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;以专业美食评论家的语气描述这道菜&quot;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>训练特性适配</strong>  </p><ul><li>使用明确命令句式  </li><li>提供3-5个示例（直接嵌入提示）  </li><li>全大写禁止指令：”DO NOT生成暴力内容”  </li></ul></li><li><p><strong>开发工具链</strong><br>Xcode Playground支持实时预览模型响应，只需添加<code>#Playground</code>标签  </p></li></ol><h3 id="指令系统深度应用"><a href="#指令系统深度应用" class="headerlink" title="指令系统深度应用"></a>指令系统深度应用</h3><p>全局指令示例：<br>“作为儿童教育助手，所有输出需符合PG-13评级标准”<br>该设置将影响后续所有交互的基调和内容过滤。</p><h2 id="AI安全防护体系"><a href="#AI安全防护体系" class="headerlink" title="AI安全防护体系"></a>AI安全防护体系</h2><h3 id="四层防御架构"><a href="#四层防御架构" class="headerlink" title="四层防御架构"></a>四层防御架构</h3><ol><li><p><strong>核心层</strong>  </p><ul><li>输入/输出双向内容过滤  </li><li>自动拦截暴力、歧视性内容  </li></ul></li><li><p><strong>指令层</strong>  </p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;遇到敏感话题时转向积极讨论&quot;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>输入控制层</strong>  </p><ul><li>禁止用户输入直接作为系统指令  </li><li>采用预制提示+用户输入的混合模式  </li></ul></li><li><p><strong>场景化防护层</strong>  </p><ul><li>食品类应用添加过敏原提示  </li><li>教育应用设置知识可信度标识  </li></ul></li></ol><h2 id="质量评估体系"><a href="#质量评估体系" class="headerlink" title="质量评估体系"></a>质量评估体系</h2><h3 id="测试框架搭建要点"><a href="#测试框架搭建要点" class="headerlink" title="测试框架搭建要点"></a>测试框架搭建要点</h3><ol><li><p><strong>数据集构建</strong>  </p><ul><li>覆盖80%主流使用场景  </li><li>包含20%压力测试案例  </li></ul></li><li><p><strong>自动化工具链</strong>  </p><ul><li>开发专用CLI测试工具  </li><li>结合LLM自动评分系统  </li></ul></li><li><p><strong>异常处理验证</strong>  </p><ul><li>测试安全拦截时的用户体验  </li><li>建立错误代码对应方案  </li></ul></li><li><p><strong>持续改进机制</strong>  </p><ul><li>通过Feedback Assistant提交问题  </li><li>用户反馈需明确数据使用政策  </li></ul></li></ol><h2 id="设计自查清单"><a href="#设计自查清单" class="headerlink" title="设计自查清单"></a>设计自查清单</h2><p>应用上线前必查项：<br>✅ 模型错误处理流程完备性<br>✅ 安全指令与业务场景匹配度<br>✅ 用户输入过滤机制有效性<br>✅ 高风险场景专项防护措施<br>✅ 自动化测试覆盖率≥70%  </p><h2 id="开发资源推荐"><a href="#开发资源推荐" class="headerlink" title="开发资源推荐"></a>开发资源推荐</h2><ul><li><strong>实验工具</strong>：Xcode行内Playground  </li><li><strong>设计规范</strong>：《生成式AI设计指南》最新版  </li><li><strong>安全理念</strong>：machinelearning.apple.com责任AI专题  </li></ul><h2 id="相关文档"><a href="#相关文档" class="headerlink" title="相关文档"></a>相关文档</h2><p><a href="https://developer.apple.com/design/human-interface-guidelines/generative-ai">人机界面指南：生成式AI</a><br><a href="https://developer.apple.com/design/human-interface-guidelines/machine-learning">人机界面指南：机器学习</a><br><a href="https://developer.apple.com/documentation/FoundationModels/improving-safety-from-generative-model-output">提升生成模型输出的安全性</a>  </p><blockquote><p>提示：设备端模型开发需特别注意内存占用优化，建议参考WWDC性能优化专题演讲获取专项技巧。<br>此文章由AI生成，可能存在错误，如有问题，请联系<a href="djs66256@163.com">djs66256@163.com</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;设计充分发挥 foundation models 框架优势的生成式 ai 体验。首先我们将展示如何为 apple 智能核心的设备端大语言模型设计提示。然后，我们将介绍 ai 安全方面的关键理念，并提供切实可行的具体策略来助你打造安全、可靠且令人愉悦的生成式 ai 功能。&lt;br&gt;
    
    </summary>
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/categories/wwdc2025/"/>
    
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/tags/wwdc2025/"/>
    
      <category term="ios" scheme="http://djs66256.github.io/tags/ios/"/>
    
      <category term="ipados" scheme="http://djs66256.github.io/tags/ipados/"/>
    
      <category term="macos" scheme="http://djs66256.github.io/tags/macos/"/>
    
      <category term="设计" scheme="http://djs66256.github.io/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>了解 SwiftUI 空间布局</title>
    <link href="http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_273/"/>
    <id>http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_273/</id>
    <published>2025-06-10T07:50:53.000Z</published>
    <updated>2025-06-10T07:50:53.130Z</updated>
    
    <content type="html"><![CDATA[<p>探索使用 swiftui 开发空间体验的新工具。了解 visionos 上 3d swiftui 视图的基本知识，借助深度对齐功能来自定现有布局，并使用修饰符在空间中旋转和放置视图。探索如何使用空间容器在同一 3d 空间中对齐视图，打造更沉浸、更引人入胜的 app。<br><span id="more"></span></p><p><img src="https://devimages-cdn.apple.com/wwdc-services/images/3055294D-836B-4513-B7B0-0BC5666246B0/9989/9989_wide_250x141_2x.jpg" alt="视频封面"><br><a href="https://developer.apple.com/cn/videos/play/wwdc2025/273/">视频地址</a></p><h1 id="探索-SwiftUI-空间布局：打造沉浸式-3D-应用体验"><a href="#探索-SwiftUI-空间布局：打造沉浸式-3D-应用体验" class="headerlink" title="探索 SwiftUI 空间布局：打造沉浸式 3D 应用体验"></a>探索 SwiftUI 空间布局：打造沉浸式 3D 应用体验</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>随着 visionOS 的推出，SwiftUI 迎来了全新的空间布局功能，让开发者能够轻松构建沉浸式的 3D 应用体验。本文将带你深入探索这些创新工具，从基础概念到高级应用，帮助你掌握 SwiftUI 在三维空间中的布局能力。</p><h2 id="3D-视图基础"><a href="#3D-视图基础" class="headerlink" title="3D 视图基础"></a>3D 视图基础</h2><p>在 visionOS 中，SwiftUI 视图从二维扩展到了三维空间。布局系统现在不仅计算宽度、高度和 X/Y 位置，还增加了深度维度：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 可视化 3D 框架的调试工具</span></span><br><span class="line"><span class="type">Model3D</span>(named: <span class="string">&quot;Robot&quot;</span>).debugBorder3D(.red)</span><br></pre></td></tr></table></figure><p>值得注意的是：</p><ul><li>像 <code>Model3D</code> 这样的视图具有固定的三维尺寸</li><li>传统 2D 视图（如 <code>Image</code> 和 <code>Text</code>）深度为零</li><li><code>RealityView</code> 和可调整大小的 <code>Model3D</code> 会占据所有可用深度空间</li></ul><h2 id="深度对齐：定制-3D-布局"><a href="#深度对齐：定制-3D-布局" class="headerlink" title="深度对齐：定制 3D 布局"></a>深度对齐：定制 3D 布局</h2><p>深度对齐是 SwiftUI 为 3D 视图提供的新布局工具，类似于传统的垂直或水平对齐：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置前对齐的 VStack</span></span><br><span class="line"><span class="type">VStackLayout</span>().depthAlignment(.front) &#123;</span><br><span class="line">  <span class="type">ResizableRobotView</span>(asset: robot.model3DAsset)</span><br><span class="line">  <span class="type">RobotNameCard</span>(robot: robot)</span><br><span class="line">&#125;.frame(width: <span class="number">300</span>)</span><br></pre></td></tr></table></figure><p>你还可以创建自定义深度对齐指南，实现更复杂的布局效果：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 自定义深度对齐</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DepthPodiumAlignment</span>: <span class="title class_ inherited__">DepthAlignmentID</span> &#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">func</span> <span class="title function_">defaultValue</span>(<span class="params">in</span> <span class="params">context</span>: <span class="type">ViewDimensions3D</span>) -&gt; <span class="type">CGFloat</span> &#123;</span><br><span class="line">    context[.front]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="旋转布局：改变视图框架"><a href="#旋转布局：改变视图框架" class="headerlink" title="旋转布局：改变视图框架"></a>旋转布局：改变视图框架</h2><p>新的 <code>rotation3DLayout</code> 修饰符不同于视觉效果的旋转，它实际上会改变视图在布局系统中的框架：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 绕 Z 轴旋转 45 度</span></span><br><span class="line"><span class="type">Model3D</span>(named: <span class="string">&quot;ToyRocket&quot;</span>)</span><br><span class="line">  .rotation3DLayout(.degrees(isRotated <span class="operator">?</span> <span class="number">45</span> : <span class="number">0</span>), axis: .z)</span><br></pre></td></tr></table></figure><p>这个功能特别适合创建轮播视图等复杂的 3D 布局。</p><h2 id="空间容器：精确对齐"><a href="#空间容器：精确对齐" class="headerlink" title="空间容器：精确对齐"></a>空间容器：精确对齐</h2><p>对于需要精确对齐的场景，SwiftUI 提供了两个强大工具：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用 spatialOverlay 添加选中状态高亮环</span></span><br><span class="line"><span class="type">ResizableRobotView</span>(asset: robot.model3DAsset)</span><br><span class="line">  .spatialOverlay(alignment: .bottom) &#123;</span><br><span class="line">    <span class="keyword">if</span> isSelected &#123; <span class="type">ResizableSelectionRingModel</span>() &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><code>SpatialContainer</code> 则允许将多个视图对齐到同一 3D 空间，就像俄罗斯套娃一样精确嵌套。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>SwiftUI 的空间布局功能为 visionOS 应用开发带来了全新可能性。从基本的 3D 视图到复杂的深度对齐和旋转布局，这些工具让开发者能够轻松创建沉浸式体验。虽然某些高级场景仍需结合 RealityKit，但 SwiftUI 已经为大多数 3D 应用需求提供了完整的解决方案。</p><h2 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h2><p><a href="https://developer.apple.com/videos/play/wwdc2025/274">搭配使用更出色：SwiftUI 和 RealityKit</a><br><a href="https://developer.apple.com/videos/play/wwdc2022/10056">使用 SwiftUI 构建自定布局</a><br><a href="https://developer.apple.com/videos/play/wwdc2019/237">利用 SwiftUI 构建自定视图</a>  </p><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://developer.apple.com/design/human-interface-guidelines/designing-for-visionos">人机界面指南：visionOS 设计</a></p><blockquote><p>此文章由AI生成，可能存在错误，如有问题，请联系<a href="djs66256@163.com">djs66256@163.com</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;探索使用 swiftui 开发空间体验的新工具。了解 visionos 上 3d swiftui 视图的基本知识，借助深度对齐功能来自定现有布局，并使用修饰符在空间中旋转和放置视图。探索如何使用空间容器在同一 3d 空间中对齐视图，打造更沉浸、更引人入胜的 app。&lt;br&gt;
    
    </summary>
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/categories/wwdc2025/"/>
    
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/tags/wwdc2025/"/>
    
      <category term="visionos" scheme="http://djs66256.github.io/tags/visionos/"/>
    
      <category term="设计" scheme="http://djs66256.github.io/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>通过小小文字改动让 App 变得大不同</title>
    <link href="http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_404/"/>
    <id>http://djs66256.github.io/2025/06/10/2025-06-10-wwdc2025_404/</id>
    <published>2025-06-10T07:50:38.000Z</published>
    <updated>2025-06-10T07:50:38.874Z</updated>
    
    <content type="html"><![CDATA[<p>随着新的设计系统在各平台之间实现统一，现在是时候重新审视一下 ui 中的文字表述了。了解一些小的改动 (例如移除重复内容并突出优势) 如何快速提升 app 的可用性和清晰度。<br><span id="more"></span></p><p><img src="https://devimages-cdn.apple.com/wwdc-services/images/3055294D-836B-4513-B7B0-0BC5666246B0/10001/10001_wide_250x141_2x.jpg" alt="视频封面"><br><a href="https://developer.apple.com/cn/videos/play/wwdc2025/404/">视频地址</a></p><h1 id="通过细微文案调整提升应用用户体验"><a href="#通过细微文案调整提升应用用户体验" class="headerlink" title="通过细微文案调整提升应用用户体验"></a>通过细微文案调整提升应用用户体验</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在苹果新设计系统实现跨平台统一的背景下，优化应用界面的文案同样重要。本文分享四个简单有效的文案技巧，帮助开发者通过微小改动显著提升应用的可用性和清晰度。  </p><h2 id="1-删除填充词"><a href="#1-删除填充词" class="headerlink" title="1. 删除填充词"></a>1. 删除填充词</h2><p>用户体验文案不需要过多的修饰词。常见填充词包括：  </p><ul><li><strong>副词和形容词</strong>：如”轻松地”、”快速地”、”简单的”等  </li><li><strong>感叹词</strong>：如”哎呀”、”糟糕”等  </li><li><strong>客套话</strong>：如”抱歉”、”谢谢”等  </li></ul><p><strong>案例</strong>：<br>原文案：”糟糕！我们要迟到了。很抱歉，您的配送员无法准时抵达，只需再等短短的10分钟！请查看应用追踪位置。”<br>优化后：”配送延迟10分钟。请查看应用追踪配送员位置。”  </p><h2 id="2-避免重复表达"><a href="#2-避免重复表达" class="headerlink" title="2. 避免重复表达"></a>2. 避免重复表达</h2><p>重复相同内容会降低文案效率。应确保关键信息只表述一次。  </p><p><strong>案例</strong>：<br>原文案：”我们要迟到了。您的配送员无法准时抵达，10分钟后到达。”<br>优化后：”配送延迟10分钟。”  </p><h2 id="3-价值先行"><a href="#3-价值先行" class="headerlink" title="3. 价值先行"></a>3. 价值先行</h2><p>将行动带来的利益放在前面，能更有效地吸引用户。  </p><p><strong>案例</strong>：<br>原文案：”输入电话号码获取预订更新。”<br>优化后：”为获取预订更新，请输入电话号码。”  </p><h2 id="4-建立词表"><a href="#4-建立词表" class="headerlink" title="4. 建立词表"></a>4. 建立词表</h2><p>词表能确保应用内术语的一致性，建议包含：  </p><ul><li>规范用词  </li><li>禁用同义词  </li><li>简要解释  </li></ul><p><strong>案例</strong>：<br>在游戏中统一使用”别名”而非”用户名”或”称号”来指代玩家ID。  </p><h2 id="综合案例：AirPods-Pro听力测试"><a href="#综合案例：AirPods-Pro听力测试" class="headerlink" title="综合案例：AirPods Pro听力测试"></a>综合案例：AirPods Pro听力测试</h2><ol><li>删除填充词：标题直接使用”测试听力”  </li><li>价值先行：强调”听力损失普遍存在且可能恶化”  </li><li>一致性：所有步骤页统一使用”下一步”按钮  </li><li>避免重复：标题和说明提供互补而非重复信息  </li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过这四项技巧，开发者可以快速提升应用文案质量。建议预留1-2小时实践这些方法，并大声朗读文案以识别冗余内容。  </p><h2 id="相关文档"><a href="#相关文档" class="headerlink" title="相关文档"></a>相关文档</h2><p><a href="https://developer.apple.com/design/human-interface-guidelines/writing">人机界面指南：文案写作</a></p><blockquote><p>此文章由AI生成，可能存在错误，如有问题，请联系<a href="djs66256@163.com">djs66256@163.com</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;随着新的设计系统在各平台之间实现统一，现在是时候重新审视一下 ui 中的文字表述了。了解一些小的改动 (例如移除重复内容并突出优势) 如何快速提升 app 的可用性和清晰度。&lt;br&gt;
    
    </summary>
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/categories/wwdc2025/"/>
    
    
      <category term="wwdc2025" scheme="http://djs66256.github.io/tags/wwdc2025/"/>
    
      <category term="ios" scheme="http://djs66256.github.io/tags/ios/"/>
    
      <category term="ipados" scheme="http://djs66256.github.io/tags/ipados/"/>
    
      <category term="macos" scheme="http://djs66256.github.io/tags/macos/"/>
    
      <category term="tvos" scheme="http://djs66256.github.io/tags/tvos/"/>
    
      <category term="visionos" scheme="http://djs66256.github.io/tags/visionos/"/>
    
      <category term="watchos" scheme="http://djs66256.github.io/tags/watchos/"/>
    
      <category term="设计" scheme="http://djs66256.github.io/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
</feed>
