---
title: 开发效率问题杂谈
date: 2020-01-22 00:05:02
tags:
---

目前国内的大环境来说，功能的迭代的速度越来越快，一个app的功能也越来越多，但这些并不是单纯的增加人员就可以解决的，这就需要我们更好的提高开发效率了。

<!--more-->

# 被玩坏了的敏捷

敏捷开发，这个大家耳熟能详的开发模式，被众多公司所吹捧。而在目前国内的环境，很多公司并不能做到敏捷开发所关注的一些点，而把重点只放在了迭代这个点上。紧张的开发周期，有限的开发时间，还要被各种会议占用，所以就很容易在一次次迭代过程中，整个项目慢慢陷入愈来愈难以维护的泥潭。

这个世界上不存在银弹，我们无法简单的通过增加劳动时间、增加人员来解决这个问题，反而可能会更进一步的把项目推入深渊。所以这里简单的看看这类问题。

## 历史包袱

一个项目时间越是长远，那么他的历史包袱就会越重。

以目前的技术发展，5年的变化就可以说是翻天覆地的了。但是项目并不能放弃以前的业务，也不太可能直接重写整个业务模块。这些问题在大厂更为典型，所以很多大厂都有一些和目前流行技术不同的方案。

历史包袱带来的最大问题并不是功能的问题，而是维护代码的问题，没有文档、人员流动、不良的方案都会导致维护的工作量直线上升，甚至可能出现重写这个功能比修改原来代码更快的场景。

## 文档

从个人这几年的工作经验来看，文档这个东西很少被人重视，甚至可以说，大部分公司都拿不出整个项目完整的文档。

从产品-设计-技术-QA-数据这整条链路上，任何一环都不能缺少文档记录，而且团队越小这个问题越严重。如果某些关键人物一旦缺席，那么整个链路就会发生严重的问题。

虽然文档这个东西会占用一部分前期的开发时间，但是对于新人和后续维护都会有很好的帮助。

## 不良设计

并不是所有人都能够设计出好的结构，甚至在以前是优秀的设计，在多次迭代后也会变为难以维护的架构。

设计这个问题是非常依赖于人的，需要个人拥有丰富的经验与一定的远见。

一旦设计层面上就出现问题了，那么以后要改动就会非常困难，往往是牵一发而动全身。

## 团队合作

在大型团队里面，团队合作就会变得更为复杂，往往会占用大量时间进行沟通。

这里不仅仅包括部门间的合作，还包括部门内的沟通，以及组内的沟通。

# 困境

所有的问题都会导致质量下降，bug层出不穷。

并不是没有办法解决这类问题，从代码的角度来说，就是重构，但是解决这类问题却有各种困境。

## 项目时间

目前很多项目的项目时间都很紧张，这个是最为主要的原因。

为了追赶项目进度，只能放弃更好的设计，在原来的基础上增加一些逻辑，时间久了，就会变得更复杂更难以修改了。

## 重构

重构是个非常复杂的事情，首先需要完全了解整个功能与细节处理。

这对人员的要求也会比较高，而且需要全功能的回归测试，所调用的资源是非常大的。

所以一般来说，都不会建议重构，功能ok才是公司的根本，在没有问题的情况下是没有重构的动力的。

## KPI

大部分公司都非常看重KPI，而像重构、文档这些东西并不会被公司认为是KPI里的一部分。我也问过一些人，很多人都觉得这些问题都不是他们的KPI，所以就根本没有去思考过这类问题。

提升效率的确是一个非常难以量化的东西，最终结果也是很难以量化的。所以像一般开发者，很少会去做这些看似吃力不讨好的工作。

## 团队合作

要提升效率，需要的不仅仅是个人，更多的是整个团队。而要调动整个团队的改善措施往往不是那么容易的。

# 最后

效率和现状往往是一个矛盾，解决效率问题能够很好地改善现状，但是现状却是无法很好地改善效率问题。